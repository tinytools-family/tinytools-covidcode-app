{"version":3,"sources":["serviceWorkerRegistration.ts","theme.ts","components/Page/Page.styles.ts","components/Page/PageHeaderTypography.styles.ts","components/Page/PageHeaderTypography.tsx","logo.svg","components/Page/Page.tsx","components/Page/PageHeader.tsx","components/Page/PageMain.styles.ts","components/Page/PageMain.tsx","modules/app-about/containers/About/About.tsx","modules/app-codes-code/containers/Code/Code.styles.ts","modules/app-codes/services/CodesService.ts","components/Page/PageProgress.styles.ts","components/Page/PageProgress.tsx","components/Page/PageFooter.styles.ts","components/Page/PageFooter.tsx","modules/app-codes-code/containers/Code/Code.tsx","components/Page/PageFooterFab.styles.ts","components/Page/PageFooterFab.tsx","modules/app-codes-codelist/containers/CodelistItem/CodelistItem.styles.ts","modules/app-codes-codelist/containers/CodelistItem/CodelistItem.tsx","components/PageDialog/PageDialog.tsx","components/PageDialog/PageDialogHeader.styles.ts","components/PageDialog/PageDialogHeader.tsx","modules/app-codes-codelist/containers/CodelistItemForm/CodelistItemForm.styles.ts","components/FileField/FileField.styles.ts","components/FileField/FileField.tsx","components/DateField/DateField.styles.ts","components/DateField/DateField.tsx","modules/app-codes-codelist/containers/CodelistItemForm/CodelistItemForm.tsx","modules/app-codes-codelist/containers/CodelistTool/CreateItem/CreateItem.tsx","modules/app-codes-codelist/containers/CodelistTool/UpdateItem/UpdateItem.tsx","modules/app-codes-codelist/containers/CodelistTool/DeleteItem/DeleteItem.tsx","components/Page/PageList.styles.ts","components/Page/PageList.tsx","modules/app-codes-codelist/containers/Codelist/Codelist.tsx","modules/app-codes/containers/Codes/Codes.tsx","modules/app-config/containers/Config/Config.styles.ts","modules/app-config/containers/Config/Config.tsx","modules/app/containers/App/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","theme","createTheme","palette","primary","main","grey","styles","createStyles","header","headerContainer","paddingLeft","spacing","paddingRight","breakpoints","up","headerMenu","marginRight","menu","menuLogo","width","height","marginLeft","menuMain","flexGrow","display","flexDirection","justifyContent","menuList","paddingTop","paddingBottom","menuListItem","menuListItemIcon","minWidth","menuListItemText","lineHeight","whiteSpace","root","overflow","textOverflow","useStyles","makeStyles","name","PageHeaderTypography","props","classes","children","Typography","className","variant","component","Page","PageContext","React","createContext","useState","menuOpen","setMenuOpen","content","setContent","value","useMemo","Provider","AppBar","position","color","elevation","Container","maxWidth","Toolbar","disableGutters","IconButton","edge","onClick","Drawer","anchor","open","onClose","src","logoUrl","alt","List","ListItem","button","NavLink","to","ListItemIcon","SvgIcon","fill","d","ListItemText","PageHeader","pageContext","useContext","useEffect","PageMain","About","alignItems","padding","mainImage","maxHeight","mainImage_empty","action","disabled","footerToolbar","footerTabs","footerTab","fetchCodelist","query","a","codelist","readCodelist","undefined","id","filter","code","fetchCode","data","Error","uuid","push","writeCodelist","map","existsCode","i","findIndex","length","localStorage","getItem","JSON","parse","setItem","stringify","progress","PageProgress","LinearProgress","bottom","pointerEvents","PageFooter","Code","useParams","removeItem","setCode","codePending","setCodePending","setCodelist","codelistPending","setCodelistPending","active","pending","menuAnchorRef","useRef","style","ref","current","anchorEl","MenuItem","primaryTypographyProps","imageUrl","clsx","viewBox","x","y","Tabs","Tab","label","replace","PageFooterFab","status","status_valid","success","dark","status_invalid","text","CodelistItem","item","formatItemUrl","onMoveUpward","onMoveDownward","routeMatch","useRouteMatch","expiredAt","compareAsc","Date","disableTypography","url","ListItemSecondaryAction","path","PageDialog","Dialog","fullScreen","back","PageDialogHeader","fieldContainer","adornment","hidden","visibility","FileField","onChangeValue","otherProps","fileInputRef","displayValue","substring","TextField","InputProps","endAdornment","click","onChange","type","onInput","files","file","reader","FileReader","onloadend","result","readAsDataURL","tabIndex","DateField","pickerOpen","setPickerOpen","utils","DateFnsUtils","locale","ruLocale","readOnly","DatePicker","CodelistItemForm","onChangeData","fullWidth","target","toJSON","CreateItem","setData","submitPending","setSubmitPending","Button","size","createCode","UpdateItem","updateCode","DeleteItem","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCode","PageList","Codelist","history","useHistory","moveCodeUpward","moveCodeDownward","Fab","render","goBack","Codes","Config","App","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b4991bfe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createTheme } from '@material-ui/core/styles'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nexport const theme = createTheme({\r\n\r\n    palette: {\r\n        primary: {\r\n            main: grey[900],\r\n        },\r\n    },\r\n\r\n})\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    header: {\r\n\r\n    },\r\n    headerContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n        },\r\n    },\r\n    headerMenu: {\r\n        marginRight: theme.spacing(0.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginRight: theme.spacing(1.5),\r\n        },\r\n    },\r\n\r\n    menu: {\r\n\r\n    },\r\n    menuLogo: {\r\n        width: 40,\r\n        height: 40,\r\n        marginLeft: theme.spacing(-1),\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 48,\r\n            height: 48,\r\n            marginLeft: theme.spacing(-1.5),\r\n            marginRight: theme.spacing(1.5),\r\n        },\r\n    },\r\n    menuMain: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n    },\r\n    menuList: {\r\n        paddingTop: 12,\r\n        paddingBottom: 12,\r\n    },\r\n    menuListItem: {\r\n        height: 48,\r\n        paddingLeft: 16,\r\n        paddingRight: 24,\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: 24,\r\n        }\r\n    },\r\n    menuListItemIcon: {\r\n        minWidth: 40,\r\n        [theme.breakpoints.up('sm')]: {\r\n            minWidth: 48,\r\n        }\r\n    },\r\n    menuListItemText: {\r\n        '& > span': {\r\n            lineHeight: '1px',\r\n            whiteSpace: 'nowrap',\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageHeaderTypography.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageHeaderTypography.name,\r\n})\r\n\r\nexport interface IPageHeaderTypographyProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageHeaderTypography(props: IPageHeaderTypographyProps) {\r\n    const classes = useStyles()\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <Typography\r\n            className={classes.root}\r\n            variant=\"h6\"\r\n            component=\"h1\"\r\n        >\r\n            {children}\r\n        </Typography>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.712ae7a0.svg\";","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Page.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport PageHeaderTypography from './PageHeaderTypography'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport logoUrl from '../../logo.svg'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Page.name,\r\n})\r\n\r\nexport interface IPageContextValue {\r\n    content: React.ReactNode\r\n    setContent: (toolbar: React.ReactNode) => void\r\n}\r\n\r\nexport const PageContext = React.createContext<IPageContextValue | null>(null)\r\n\r\nexport interface IPageProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function Page(props: IPageProps) {\r\n    const classes = useStyles()\r\n\r\n    const { children } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n\r\n    const [ content, setContent ] = React.useState<React.ReactNode>(null)\r\n\r\n    const value = React.useMemo<IPageContextValue>(() => {\r\n        return {\r\n            content,\r\n            setContent,\r\n        }\r\n    }, [\r\n        content,\r\n        setContent,\r\n    ])\r\n\r\n    return (\r\n        <PageContext.Provider value={value}>\r\n\r\n            <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n                <Container className={classes.headerContainer} maxWidth={false}>\r\n                    <Toolbar disableGutters>\r\n\r\n                        <IconButton\r\n                            className={classes.headerMenu}\r\n                            color=\"inherit\"\r\n                            edge=\"start\"\r\n                            onClick={() => setMenuOpen(true)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n\r\n                        {content}\r\n\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                onClose={() => setMenuOpen(false)}\r\n            >\r\n\r\n                <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n                    <Container maxWidth={false}>\r\n                        <Toolbar disableGutters>\r\n\r\n                            <img\r\n                                className={classes.menuLogo}\r\n                                src={logoUrl}\r\n                                alt=\"Covidcode\"\r\n                            />\r\n\r\n                            <PageHeaderTypography>\r\n                                Covidcode\r\n                            </PageHeaderTypography>\r\n\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n\r\n                <div className={classes.menuMain}>\r\n\r\n                    <List className={classes.menuList}>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/codes/codelist`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon>\r\n                                    <path fill=\"currentColor\" d=\"M2 14H8V20H2M16 8H10V10H16M2 10H8V4H2M10 4V6H22V4M10 20H16V18H10M10 16H22V14H10\"/>\r\n                                </SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"Сертификаты о вакцинации\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/config`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon>\r\n                                    <path fill=\"currentColor\" d=\"M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z\" />\r\n                                </SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"Настройки\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n\r\n                    <List className={classes.menuList}>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/about`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon>\r\n                                    <path fill=\"currentColor\" d=\"M11,18H13V16H11V18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,6A4,4 0 0,0 8,10H10A2,2 0 0,1 12,8A2,2 0 0,1 14,10C14,12 11,11.75 11,15H13C13,12.75 16,12.5 16,10A4,4 0 0,0 12,6Z\"/>\r\n                                </SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"О программе\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n\r\n                </div>\r\n\r\n            </Drawer>\r\n\r\n            {children}\r\n\r\n        </PageContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { PageContext } from './Page'\r\n\r\nexport interface IPageHeaderProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageHeader(props: IPageHeaderProps) {\r\n\r\n    const pageContext = React.useContext(PageContext)\r\n\r\n    React.useEffect(() => {\r\n        pageContext?.setContent(props.children)\r\n        return () => {\r\n            pageContext?.setContent(null)\r\n        }\r\n    }, [\r\n        pageContext?.setContent,\r\n        props.children,\r\n    ])\r\n\r\n    return null\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageMain.styles'\r\n//import clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageMain.name,\r\n})\r\n\r\nexport interface IPageMainProps {\r\n    classes?: any\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageMain(props: IPageMainProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <main className={classes.root}>\r\n            {children}\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import makeStyles from '@material-ui/core/styles/makeStyles'\r\n//import styles from './About.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport PageHeader from '../../../../components/Page/PageHeader'\r\nimport PageHeaderTypography from '../../../../components/Page/PageHeaderTypography'\r\nimport PageMain from '../../../../components/Page/PageMain'\r\n\r\n//const useStyles = makeStyles(styles, {\r\n//    name: About.name,\r\n//})\r\n\r\nexport interface IAboutProps {\r\n\r\n}\r\n\r\nexport default function About(props: IAboutProps) {\r\n    //const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            <PageHeader>\r\n                <PageHeaderTypography>О программе</PageHeaderTypography>\r\n            </PageHeader>\r\n\r\n            <PageMain>\r\n                О программе\r\n            </PageMain>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    main: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 16,\r\n        overflow: 'hidden',\r\n    },\r\n    mainImage: {\r\n        display: 'block',\r\n        maxWidth: 250,\r\n        maxHeight: 250,\r\n        '@media (orientation: landscape)': {\r\n            height: '100%',\r\n        },\r\n        '@media (orientation: portrait)': {\r\n            width: '100%',\r\n        },\r\n    },\r\n    mainImage_empty: {\r\n        '& > path[fill]': {\r\n            fill: theme.palette.action.disabled,\r\n        },\r\n    },\r\n\r\n    footerToolbar: {\r\n        justifyContent: 'center',\r\n    },\r\n    footerTabs: {\r\n\r\n    },\r\n    footerTab: {\r\n        height: 64,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { v1 as uuid } from 'uuid'\r\n\r\nexport interface ICode {\r\n    id: string\r\n    name: string\r\n    expiredAt?: string\r\n    url?: string\r\n    imageUrl?: string\r\n}\r\n\r\nexport interface ICodelistQuery {\r\n    id?: string\r\n}\r\n\r\nexport async function fetchCodelist(query:ICodelistQuery): Promise<ICode[]> {\r\n    let codelist: ICode[] = readCodelist()\r\n    if (query) {\r\n        if (query.id !== undefined) {\r\n            codelist = codelist.filter((code) => code.id === query.id)\r\n        }\r\n    }\r\n    return codelist\r\n}\r\n\r\nexport async function fetchCode(id: string): Promise<ICode|null> {\r\n    const [ code ] = await fetchCodelist({ id })\r\n    return code || null\r\n}\r\n\r\nexport async function createCode(data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id: uuid(),\r\n        name: data.name,\r\n    }\r\n    const codelist: ICode[] = readCodelist()\r\n    codelist.push(code)\r\n    writeCodelist(codelist)\r\n    return code\r\n}\r\n\r\nexport async function updateCode(id: string, data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id,\r\n        name: data.name,\r\n    }\r\n    let codelist: ICode[] = readCodelist()\r\n    codelist = codelist.map((existsCode) => existsCode.id !== id ? existsCode : code)\r\n    writeCodelist(codelist)\r\n    return code\r\n}\r\n\r\nexport async function deleteCode(id: string) {\r\n    let codelist: ICode[] = readCodelist()\r\n    codelist = codelist.filter((code) => code.id !== id)\r\n    writeCodelist(codelist)\r\n}\r\n\r\nexport async function moveCodeUpward(id: string) {\r\n    let codelist: ICode[] = readCodelist()\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i > 0) {\r\n        [codelist[i-1], codelist[i]] = [codelist[i], codelist[i-1]]\r\n    }\r\n    writeCodelist(codelist)\r\n}\r\n\r\nexport async function moveCodeDownward(id: string) {\r\n    let codelist: ICode[] = readCodelist()\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i < codelist.length - 1) {\r\n        [codelist[i+1], codelist[i]] = [codelist[i], codelist[i+1]]\r\n    }\r\n    writeCodelist(codelist)\r\n}\r\n\r\nfunction readCodelist() {\r\n    return localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n}\r\n\r\nfunction writeCodelist(codelist: ICode[]) {\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        position: 'relative',\r\n    },\r\n\r\n    progress: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageProgress.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageProgress.name,\r\n})\r\n\r\nexport interface IPageProgressProps {\r\n\r\n}\r\n\r\nexport default function PageProgress(props: IPageProgressProps) {\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgress className={classes.progress} color=\"secondary\"/>\r\n        </div>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        '& > *': {\r\n            pointerEvents: 'all',\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageFooter.styles'\r\n//import clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageFooter.name,\r\n})\r\n\r\nexport interface IPageFooterProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageFooter(props: IPageFooterProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <footer className={classes.root}>\r\n            {children}\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Code.styles'\r\nimport clsx from 'clsx'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, fetchCodelist, ICode } from '../../../app-codes/services/CodesService'\r\n\r\nimport PageHeader from '../../../../components/Page/PageHeader'\r\nimport PageHeaderTypography from '../../../../components/Page/PageHeaderTypography'\r\nimport PageProgress from '../../../../components/Page/PageProgress'\r\nimport PageMain from '../../../../components/Page/PageMain'\r\nimport PageFooter from '../../../../components/Page/PageFooter'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Code.name,\r\n})\r\n\r\nexport default function Code() {\r\n    const classes = useStyles()\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem('path', `/codes/code/${id}`)\r\n        return () => {\r\n            localStorage.removeItem('path')\r\n        }\r\n    }, [id])\r\n\r\n    const [ code, setCode ] = React.useState<ICode | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    const pending = React.useMemo(() => {\r\n        return codePending || codelistPending\r\n    }, [codePending, codelistPending])\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n    const menuAnchorRef = React.useRef<HTMLButtonElement>(null)\r\n\r\n    return (\r\n        <>\r\n\r\n            <PageHeader>\r\n\r\n                <PageHeaderTypography>Сертификат о вакцинации</PageHeaderTypography>\r\n\r\n                <div style={{ flexGrow:1 }}/>\r\n\r\n                <IconButton\r\n                    ref={menuAnchorRef}\r\n                    edge=\"end\"\r\n                    onClick={() => setMenuOpen(true)}\r\n                >\r\n                    <MoreVertIcon/>\r\n                </IconButton>\r\n\r\n                {menuAnchorRef.current && (\r\n                    <Menu\r\n                        anchorEl={menuAnchorRef.current}\r\n                        open={menuOpen}\r\n                        onClose={() => setMenuOpen(false)}\r\n                    >\r\n\r\n                        <MenuItem\r\n                            component={NavLink}\r\n                            to={`/codes/codelist/${id}/update`}\r\n                            onClick={() => { setMenuOpen(false); }}\r\n                        >\r\n                            <ListItemText\r\n                                primary=\"Изменить\"\r\n                            />\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            component={NavLink}\r\n                            to={`/codes/codelist/${id}/delete`}\r\n                            onClick={() => { setMenuOpen(false); }}\r\n                        >\r\n                            <ListItemText\r\n                                primary=\"Удалить\"\r\n                                primaryTypographyProps={{\r\n                                    color: 'error'\r\n                                }}\r\n                            />\r\n                        </MenuItem>\r\n\r\n                    </Menu>\r\n                )}\r\n\r\n            </PageHeader>\r\n\r\n            {pending && (\r\n                <PageProgress/>\r\n            )}\r\n\r\n            {!pending && (\r\n                <PageMain classes={{ root:classes.main }}>\r\n                    {code && code.imageUrl ? (\r\n                        <img className={classes.mainImage} src={code.imageUrl} alt=\"\"/>\r\n                    ) : (\r\n                        <svg className={clsx(classes.mainImage, classes.mainImage_empty)} viewBox=\"0 0 250 250\"><rect x=\"2\" y=\"2\" width=\"245\" height=\"245\" fill=\"transparent\"/><path d=\"M2 2H37V7H7V37H2V2Z\" fill=\"black\"/><path d=\"M212 2H247V37H242V7H212V2Z\" fill=\"black\"/><path d=\"M7 212H2V247H37V242H7V212Z\" fill=\"black\"/><path d=\"M212 242V247H247V212H242V242H212Z\" fill=\"black\"/></svg>\r\n                    )}\r\n                </PageMain>\r\n            )}\r\n\r\n            {!pending && (\r\n                <PageFooter>\r\n                    <Toolbar className={classes.footerToolbar} disableGutters>\r\n                        {codelist && codelist.length > 1 && (\r\n                            <Tabs\r\n                                className={classes.footerTabs}\r\n                                variant=\"scrollable\"\r\n                                value={id}\r\n                            >\r\n                                {codelist.map((code) => (\r\n                                    <Tab\r\n                                        key={code.id}\r\n                                        className={classes.footerTab}\r\n                                        label={code.name}\r\n                                        value={code.id}\r\n                                        component={NavLink}\r\n                                        to={`/codes/code/${code.id}`}\r\n                                        replace\r\n                                    />\r\n                                ))}\r\n                            </Tabs>\r\n                        )}\r\n                    </Toolbar>\r\n                </PageFooter>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: 32,\r\n        '& > *': {\r\n            pointerEvents: 'all',\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageFooterFab.styles'\r\n//import clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageFooterFab.name,\r\n})\r\n\r\nexport interface IPageFooterFabProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageFooterFab(props: IPageFooterFabProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    status: {\r\n\r\n    },\r\n    status_valid: {\r\n        color: theme.palette.success.dark,\r\n    },\r\n    status_invalid: {\r\n        color: theme.palette.error.dark,\r\n    },\r\n\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n        },\r\n    },\r\n\r\n    text: {\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItem.styles'\r\nimport clsx from 'clsx'\r\n\r\nimport { ICode } from '../../../app-codes/services/CodesService'\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { compareAsc } from 'date-fns'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItem.name,\r\n})\r\n\r\nexport interface ICodelistItemProps {\r\n    item: ICode\r\n    formatItemUrl: (item: ICode) => string\r\n    onMoveUpward: () => void\r\n    onMoveDownward: () => void\r\n}\r\n\r\nexport default function CodelistItem(props: ICodelistItemProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { item, formatItemUrl, onMoveUpward, onMoveDownward } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n    const menuAnchorRef = React.useRef<HTMLButtonElement>(null)\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    const status = React.useMemo(() => {\r\n        if (item.expiredAt) {\r\n            if (compareAsc(new Date(item.expiredAt), new Date) > 0) {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_valid)} variant=\"body2\" component=\"span\">\r\n                        Действителен\r\n                    </Typography>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_invalid)} variant=\"body2\" component=\"span\">\r\n                        Просрочен\r\n                    </Typography>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <Typography className={clsx(classes.status)} color=\"textSecondary\" variant=\"body2\" component=\"span\">\r\n                    Срок действия не указан\r\n                </Typography>\r\n            )\r\n        }\r\n    }, [item])\r\n\r\n    return (\r\n        <>\r\n\r\n            <ListItem\r\n                className={classes.root}\r\n                button\r\n                component={NavLink}\r\n                to={formatItemUrl(item)}\r\n            >\r\n\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={(\r\n                        <div className={classes.text}>\r\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"span\">{item.name}</Typography>{item.url && (<Typography variant=\"body1\" color=\"textSecondary\" component=\"span\">&nbsp;&mdash;&nbsp;{item.url}</Typography>)}\r\n                        </div>\r\n                    )}\r\n                    //secondary={(\r\n                    //    <div className={classes.itemDesc}>\r\n                    //        {status}\r\n                    //    </div>\r\n                    //)}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                    <IconButton\r\n                        ref={menuAnchorRef}\r\n                        edge=\"end\"\r\n                        onClick={() => setMenuOpen(true)}\r\n                    >\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n\r\n            </ListItem>\r\n\r\n            {menuAnchorRef.current && (\r\n                <Menu\r\n                    anchorEl={menuAnchorRef.current}\r\n                    open={menuOpen}\r\n                    onClose={() => setMenuOpen(false)}\r\n                >\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveUpward() }}\r\n                    >\r\n                        <ListItemText\r\n                            primary=\"Переместить выше\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveDownward() }}\r\n                    >\r\n                        <ListItemText\r\n                            primary=\"Переместить ниже\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/update`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemText\r\n                            primary=\"Изменить\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/delete`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemText\r\n                            primary=\"Удалить\"\r\n                            primaryTypographyProps={{\r\n                                color: 'error'\r\n                            }}\r\n                        />\r\n                    </MenuItem>\r\n\r\n                </Menu>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import makeStyles from '@material-ui/core/styles/makeStyles'\r\n//import styles from './PageDialog.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\n//const useStyles = makeStyles(styles, {\r\n//    name: PageDialog.name,\r\n//})\r\n\r\nexport interface IPageDialogProps {\r\n    open: boolean\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialog(props: IPageDialogProps) {\r\n    //const classes = useStyles()\r\n\r\n    const { open, onClose, children } = props\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullScreen\r\n        >\r\n            {children}\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    back: {\r\n        marginRight: theme.spacing(1.5),\r\n    },\r\n\r\n    text: {\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageDialogHeader.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageDialogHeader.name,\r\n})\r\n\r\nexport interface IPageDialogHeaderProps {\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialogHeader(props: IPageDialogHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const { onClose, children } = props\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n            <Container maxWidth={false}>\r\n                <Toolbar disableGutters>\r\n\r\n                    <IconButton\r\n                        className={classes.back}\r\n                        edge=\"start\"\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        <ArrowBackIcon/>\r\n                    </IconButton>\r\n\r\n                    <Typography className={classes.text} variant=\"h6\">\r\n                        {children}\r\n                    </Typography>\r\n\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n    fieldContainer: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    adornment: {\r\n        marginRight: theme.spacing(-1.5) + 2,\r\n    },\r\n\r\n    hidden: {\r\n        position: 'absolute',\r\n        visibility: 'hidden',\r\n        width: 1,\r\n        height: 1,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './FileField.styles'\r\n\r\nimport TextField, { StandardTextFieldProps, FilledTextFieldProps, OutlinedTextFieldProps } from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: FileField.name,\r\n})\r\n\r\nexport interface IStandardFileFieldProps extends StandardTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IFilledFileFieldProps extends FilledTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IOutlinedFileFieldProps extends OutlinedTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport type IFileFieldProps = IStandardFileFieldProps | IFilledFileFieldProps | IOutlinedFileFieldProps\r\n\r\nexport default function FileField(props: IFileFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { value, onChangeValue, ...otherProps } = props\r\n\r\n    const fileInputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n    const displayValue = React.useMemo(() => {\r\n        if (props.value && typeof props.value === 'string') {\r\n            return props.value.substring(0, 300) + '...'\r\n        }\r\n    }, [props.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <TextField\r\n                {...otherProps}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            className={classes.adornment}\r\n                            disabled={props.disabled}\r\n                            onClick={() => {\r\n                                if (fileInputRef.current) {\r\n                                    fileInputRef.current.click()\r\n                                }\r\n                            }}\r\n                        >\r\n                            <AttachFileIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                value={displayValue || ''}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            <input\r\n                className={classes.hidden}\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                onInput={() => {\r\n                    if (fileInputRef.current) {\r\n                        const files = fileInputRef.current.files\r\n                        if (files && files.length) {\r\n                            const file = files[0]\r\n                            const reader = new FileReader()\r\n                            reader.onloadend = () => {\r\n                                onChangeValue(reader.result ? reader.result as string : undefined)\r\n                            }\r\n                            reader.readAsDataURL(file)\r\n                        }\r\n                    }\r\n                }}\r\n                tabIndex={-1}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    adornment: {\r\n        marginRight: theme.spacing(-1.5) + 2,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './DateField.styles'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport ruLocale from \"date-fns/locale/ru\"\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EventIcon from '@material-ui/icons/Event'\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: DateField.name,\r\n})\r\n\r\nexport interface IDateFieldProps {\r\n    value?: string | null\r\n    onChangeValue: (value?: Date | null) => void\r\n}\r\n\r\nexport default function DateField(props: IDateFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { value, onChangeValue } = props\r\n\r\n    const [ pickerOpen, setPickerOpen ] = React.useState(false)\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n\r\n            <TextField\r\n                label=\"Срок действия до\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            className={classes.adornment}\r\n                            edge=\"end\"\r\n                            onClick={() => setPickerOpen(true)}\r\n                        >\r\n                            <EventIcon/>\r\n                        </IconButton>\r\n                    )\r\n                }}\r\n            />\r\n\r\n            <Dialog\r\n                open={pickerOpen}\r\n                onClose={() => setPickerOpen(false)}\r\n            >\r\n                <DatePicker\r\n                    variant=\"static\"\r\n                    value={value}\r\n                    onChange={onChangeValue}\r\n                />\r\n            </Dialog>\r\n\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItemForm.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport { ICode } from '../../../app-codes/services/CodesService'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FileField from '../../../../components/FileField/FileField'\r\nimport DateField from '../../../../components/DateField/DateField'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItemForm.name,\r\n})\r\n\r\nexport interface ICodelistItemFormProps {\r\n    data: Partial<ICode>\r\n    onChangeData: (data: Partial<ICode>) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport default function CodelistItemForm(props: ICodelistItemFormProps) {\r\n    const classes = useStyles()\r\n\r\n    const { data, onChangeData, disabled } = props\r\n\r\n    return (\r\n        <form className={classes.root}>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Название (чтобы отличать один от другого)\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.name || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, name:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <DateField\r\n                    value={data.expiredAt || null}\r\n                    onChangeValue={(value) => {\r\n                        const expiredAt = value ? value.toJSON() : undefined\r\n                        onChangeData({ ...data, expiredAt })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Адрес страницы на Госуслугах (необязательно)\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.url || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, url:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <FileField\r\n                    label=\"Адрес изображения\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.imageUrl || ''}\r\n                    onChangeValue={(value) => {\r\n                        onChangeData({ ...data, imageUrl:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { createCode, ICode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface ICreateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function CreateItem(props: ICreateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const [ data, setData ] = React.useState<Partial<ICode>>({})\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitPending(true)\r\n        createCode(data)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Добавить запись о сертификате\r\n            </PageDialogHeader>\r\n\r\n            <Container maxWidth=\"md\">\r\n\r\n                <CodelistItemForm\r\n                    data={data}\r\n                    onChangeData={setData}\r\n                    disabled={submitPending}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={submitPending}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Добавить запись\r\n                </Button>\r\n\r\n            </Container>\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, updateCode, ICode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IUpdateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function UpdateItem(props: IUpdateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const [ code, setCode ] = React.useState<Partial<ICode> | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        if (!code) {\r\n            return\r\n        }\r\n        setSubmitPending(true)\r\n        updateCode(id, code)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Изменить запись о сертификате\r\n            </PageDialogHeader>\r\n\r\n            {code && (\r\n                <Container maxWidth=\"md\">\r\n\r\n                    <CodelistItemForm\r\n                        data={code}\r\n                        onChangeData={setCode}\r\n                        disabled={submitPending}\r\n                    />\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        disabled={submitPending}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Сохранить запись\r\n                    </Button>\r\n\r\n                </Container>\r\n            )}\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { deleteCode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IDeleteItemProps {\r\n    onClose: () => void\r\n    onSuccess: () => void\r\n}\r\n\r\nexport default function DeleteItem(props: IDeleteItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const handleConfirm = () => {\r\n        deleteCode(id)\r\n            .then(() => {\r\n                onSuccess()\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Удалить запись\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Действительно удалить запись о сертификате?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n                <Button\r\n                    onClick={onClose}\r\n                    autoFocus\r\n                >\r\n                    Отмена\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleConfirm}\r\n                >\r\n                    Удалить\r\n                </Button>\r\n\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        paddingTop: 12,\r\n        paddingBottom: 12,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageList.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport List from '@material-ui/core/List'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageList.name,\r\n})\r\n\r\nexport interface IPageListProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageList(props: IPageListProps) {\r\n    const classes = useStyles()\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <List\r\n            className={classes.root}\r\n        >\r\n            {children}\r\n        </List>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import makeStyles from '@material-ui/core/styles/makeStyles'\r\n//import styles from './Codelist.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport { fetchCodelist, moveCodeUpward, moveCodeDownward, ICode } from '../../../app-codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport PageHeader from '../../../../components/Page/PageHeader'\r\nimport PageHeaderTypography from '../../../../components/Page/PageHeaderTypography'\r\nimport PageProgress from '../../../../components/Page/PageProgress'\r\nimport PageMain from '../../../../components/Page/PageMain'\r\nimport PageFooter from '../../../../components/Page/PageFooter'\r\nimport PageFooterFab from '../../../../components/Page/PageFooterFab'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport CodelistItem from '../CodelistItem/CodelistItem'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport CreateItem from '../CodelistTool/CreateItem/CreateItem'\r\nimport UpdateItem from '../CodelistTool/UpdateItem/UpdateItem'\r\nimport DeleteItem from '../CodelistTool/DeleteItem/DeleteItem'\r\n\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\nimport PageList from '../../../../components/Page/PageList'\r\n\r\n//const useStyles = makeStyles(styles, {\r\n//    name: Codelist.name,\r\n//})\r\n\r\nexport interface ICodelistProps {\r\n    formatItemUrl: (item: ICode) => string\r\n}\r\n\r\nexport default function Codelist(props: ICodelistProps) {\r\n    //const classes = useStyles()\r\n\r\n    const { formatItemUrl } = props\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    const history = useHistory()\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <PageHeader>\r\n                <PageHeaderTypography>Сертификаты о вакцинации</PageHeaderTypography>\r\n            </PageHeader>\r\n\r\n            {codelistPending && (\r\n                <PageProgress/>\r\n            )}\r\n\r\n            <PageMain>\r\n                {codelist && (\r\n                    <PageList>\r\n                        {codelist.map((item) => (\r\n                            <CodelistItem\r\n                                key={item.id}\r\n                                item={item}\r\n                                formatItemUrl={formatItemUrl}\r\n                                onMoveUpward={() => {\r\n                                    moveCodeUpward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                                onMoveDownward={() => {\r\n                                    moveCodeDownward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </PageList>\r\n                )}\r\n            </PageMain>\r\n\r\n            <PageFooter>\r\n                <PageFooterFab>\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        component={NavLink}\r\n                        to={`${routeMatch.url}/create`}\r\n                    >\r\n                        <AddIcon/>\r\n                    </Fab>\r\n                </PageFooterFab>\r\n            </PageFooter>\r\n\r\n            <Switch>\r\n\r\n                <Route\r\n                    path={`${routeMatch.path}/create`}\r\n                    render={() => (\r\n                        <CreateItem\r\n                            onClose={() => {\r\n                                history.goBack()\r\n                            }}\r\n                            onSuccess={() => {\r\n                                history.goBack()\r\n                                setCodelistPending(true)\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path={`${routeMatch.path}/:id/update`}\r\n                    render={() => (\r\n                        <UpdateItem\r\n                            onClose={() => {\r\n                                history.goBack()\r\n                            }}\r\n                            onSuccess={() => {\r\n                                history.goBack()\r\n                                setCodelistPending(true)\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path={`${routeMatch.path}/:id/delete`}\r\n                    render={() => (\r\n                        <DeleteItem\r\n                            onClose={() => {\r\n                                history.goBack()\r\n                            }}\r\n                            onSuccess={() => {\r\n                                history.goBack()\r\n                                setCodelistPending(true)\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n//import makeStyles from '@material-ui/core/styles/makeStyles'\r\n//import styles from './Codes.styles'\r\n//import clsx from 'clsx'\r\n\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Code from '../../../app-codes-code/containers/Code/Code'\r\nimport Codelist from '../../../app-codes-codelist/containers/Codelist/Codelist'\r\n\r\nexport default function Codes() {\r\n    //const classes = useStyles()\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <Switch>\r\n\r\n                <Route\r\n                    path={`${routeMatch.path}/codelist`}\r\n                    render={() => (\r\n                        <Codelist\r\n                            formatItemUrl={(item) => `${routeMatch.path}/code/${item.id}`}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n                <Route\r\n                    path={`${routeMatch.path}/code/:id`}\r\n                    render={() => (\r\n                        <Code/>\r\n                    )}\r\n                />\r\n\r\n                <Redirect\r\n                    to={`${routeMatch.path}/codelist`}\r\n                />\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Config.styles'\r\n\r\nimport { fetchConfig, IConfig } from '../../services/ConfigService'\r\n\r\nimport PageHeader from '../../../../components/Page/PageHeader'\r\nimport PageHeaderTypography from '../../../../components/Page/PageHeaderTypography'\r\nimport PageMain from '../../../../components/Page/PageMain'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Config.name,\r\n})\r\n\r\nexport default function Config() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            <PageHeader>\r\n                <PageHeaderTypography>Настройки</PageHeaderTypography>\r\n            </PageHeader>\r\n\r\n            <PageMain>\r\n                Настройки\r\n            </PageMain>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Page from '../../../../components/Page/Page'\r\n\r\nimport { Switch, Redirect, Route } from 'react-router-dom'\r\n\r\nimport About from '../../../app-about/containers/About/About'\r\nimport Codes from '../../../app-codes/containers/Codes/Codes'\r\nimport Config from '../../../app-config/containers/Config/Config'\r\n\r\nexport interface IAppProps {\r\n\r\n}\r\n\r\nexport default function App(props: IAppProps) {\r\n\r\n    return (\r\n        <Page>\r\n\r\n            <Switch>\r\n\r\n                <Route path={`/about`} component={About}/>\r\n\r\n                <Route path={`/codes`} component={Codes}/>\r\n\r\n                <Route path={`/config`} component={Config}/>\r\n\r\n                <Route\r\n                    render={() => {\r\n                        const path = localStorage.getItem('path')\r\n                        if (path) {\r\n                            return (\r\n                                <Redirect to={path}/>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Redirect to={`/codes`}/>\r\n                            )\r\n                        }\r\n                    }}\r\n                />\r\n\r\n            </Switch>\r\n\r\n        </Page>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { theme } from './theme'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './modules/app/containers/App/App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <HashRouter>\n\n                <App/>\n\n            </HashRouter>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorkerRegistration.register()\n"],"sourceRoot":""}