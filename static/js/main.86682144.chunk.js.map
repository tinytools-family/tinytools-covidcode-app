{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","theme.ts","components/Header/Header.context.tsx","components/Header/Header.styles.ts","logo.svg","components/Header/Header.tsx","modules/app-codes/containers/Codes/Codes.styles.ts","modules/app-codes/services/CodesService.ts","modules/app-codes-code/containers/Code/Code.styles.ts","components/Header/HeaderTitle.tsx","modules/app-codes-code/containers/Code/Code.tsx","modules/app-codes-codelist/containers/Codelist/Codelist.styles.ts","modules/app-codes-codelist/containers/CodelistItem/CodelistItem.styles.ts","modules/app-codes-codelist/containers/CodelistItem/CodelistItem.tsx","components/PageDialog/PageDialog.styles.ts","components/PageDialog/PageDialog.tsx","components/PageDialog/PageDialogHeader.styles.ts","components/PageDialog/PageDialogHeader.tsx","modules/app-codes-codelist/containers/CodelistItemForm/CodelistItemForm.styles.ts","components/FileField/FileField.styles.ts","components/FileField/FileField.tsx","components/DateField/DateField.styles.ts","components/DateField/DateField.tsx","modules/app-codes-codelist/containers/CodelistItemForm/CodelistItemForm.tsx","modules/app-codes-codelist/containers/CodelistTool/CreateItem/CreateItem.tsx","modules/app-codes-codelist/containers/CodelistTool/UpdateItem/UpdateItem.tsx","modules/app-codes-codelist/containers/CodelistTool/DeleteItem/DeleteItem.tsx","modules/app-codes-codelist/containers/Codelist/Codelist.tsx","modules/app-codes/containers/Codes/Codes.tsx","modules/app-config/containers/Config/Config.styles.ts","modules/app-config/containers/Config/Config.tsx","modules/app-about/containers/About/About.styles.ts","modules/app-about/containers/About/About.tsx","modules/app/containers/App/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","HeaderContext","React","createContext","HeaderContextProvider","props","children","titleElementRef","useRef","value","useMemo","Provider","styles","createStyles","header","headerContainer","paddingLeft","spacing","paddingRight","breakpoints","up","headerMenu","marginRight","headerName","fontWeight","headerText","overflow","textOverflow","whiteSpace","menu","menuLogo","width","height","marginLeft","menuMain","flexGrow","display","flexDirection","justifyContent","menuList","paddingTop","paddingBottom","menuListItem","menuListItemIcon","minWidth","menuListItemText","lineHeight","useStyles","makeStyles","name","Header","classes","headerContext","useContext","useTheme","isDesktop","useMediaQuery","useState","menuOpen","setMenuOpen","AppBar","position","color","elevation","Container","className","maxWidth","Toolbar","disableGutters","IconButton","edge","onClick","Typography","variant","ref","component","Drawer","anchor","open","onClose","alt","src","logoUrl","List","ListItem","button","NavLink","to","ListItemIcon","SvgIcon","fill","d","ListItemText","primary","CODELIST","id","fetchCodelist","query","a","codelist","localStorage","getItem","JSON","parse","undefined","filter","code","fetchCode","data","Error","uuid","push","setItem","stringify","map","existsCode","i","findIndex","length","root","main","alignItems","mainImage","foot","bottom","footToolbar","footTabs","footTab","HeaderTitle","current","ReactDOM","createPortal","Code","useParams","useEffect","putCurrentCodeId","setCode","codePending","setCodePending","setCodelist","codelistPending","setCodelistPending","active","imageUrl","Tabs","Tab","label","replace","progressContainer","progress","pointerEvents","padding","status","status_valid","palette","success","dark","status_invalid","item","itemName","itemDesc","CodelistItem","formatItemUrl","onMoveUpward","onMoveDownward","menuAnchorRef","routeMatch","useRouteMatch","expiredAt","compareAsc","Date","clsx","disableTypography","url","secondary","ListItemSecondaryAction","anchorEl","MenuItem","path","PageDialog","Dialog","fullScreen","back","text","PageDialogHeader","form","fieldContainer","adornment","hidden","visibility","FileField","onChangeValue","otherProps","fileInputRef","displayValue","substring","TextField","InputProps","endAdornment","disabled","click","onChange","type","onInput","files","file","reader","FileReader","onloadend","result","readAsDataURL","tabIndex","DateField","pickerOpen","setPickerOpen","utils","DateFnsUtils","locale","ruLocale","readOnly","DatePicker","CodelistItemForm","onChangeData","fullWidth","target","toJSON","CreateItem","setData","submitPending","setSubmitPending","Button","createCode","UpdateItem","updateCode","DeleteItem","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCode","Codelist","history","useHistory","LinearProgress","moveCodeUpward","moveCodeDownward","Fab","goBack","Codes","currentCodeId","setCurrentCodeId","currentCodeIdPending","setCurrentCodeIdPending","fetchCurrentCodeId","render","Config","About","App","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"kOAYMA,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,4DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCPDO,EAAQC,YAAY,I,gCCIpBC,EAAgBC,IAAMC,cAA0C,MAM9D,SAASC,EAAsBC,GAC1C,IAAQC,EAAaD,EAAbC,SAIFC,EAAkBL,IAAMM,OAAuB,MAE/CC,EAAQP,IAAMQ,SAA6B,WAC7C,MAAO,CACHH,qBAEL,CACCA,IAGJ,OACI,cAACN,EAAcU,SAAf,CAAwBF,MAAOA,EAA/B,SACKH,I,8CCmDEM,EA9EA,SAACb,GAAD,OAAkBc,YAAa,CAE1CC,OAAQ,GAGRC,gBAAgB,aACZC,YAAajB,EAAMkB,QAAQ,GAC3BC,aAAcnB,EAAMkB,QAAQ,IAC3BlB,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BJ,YAAajB,EAAMkB,QAAQ,GAC3BC,aAAcnB,EAAMkB,QAAQ,KAGpCI,WAAW,aACPC,YAAavB,EAAMkB,QAAQ,KAC1BlB,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BE,YAAavB,EAAMkB,QAAQ,OAInCM,WAAY,CACRC,WAAY,KAEhBC,WAAY,CACRD,WAAY,IACZE,SAAU,SACVC,aAAc,WACdC,WAAY,UAGhBC,KAAM,GAGNC,SAAS,aACLC,MAAO,GACPC,OAAQ,GACRC,WAAYlC,EAAMkB,SAAS,GAC3BK,YAAavB,EAAMkB,QAAQ,IAC1BlB,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BW,MAAO,GACPC,OAAQ,GACRC,WAAYlC,EAAMkB,SAAS,KAC3BK,YAAavB,EAAMkB,QAAQ,OAGnCiB,SAAU,CACNC,SAAU,EACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAEpBC,SAAU,CACNC,WAAY,GACZC,cAAe,IAEnBC,aAAa,aACTV,OAAQ,GACRhB,YAAa,GACbE,aAAc,IACbnB,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BJ,YAAa,KAGrB2B,iBAAiB,aACbC,SAAU,IACT7C,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BwB,SAAU,KAGlBC,iBAAkB,CACd,WAAY,CACRC,WAAY,MACZlB,WAAY,c,+IC1ET,MAA0B,iCC4BnCmB,EAAYC,IAAWpC,EAAQ,CACjCqC,KAAMC,EAAOD,OAOF,SAASC,EAAO7C,GAC3B,IAAM8C,EAAUJ,IAEVK,EAAgBlD,IAAMmD,WAAWpD,GAEjCF,EAAQuD,MACRC,EAAYC,YAAczD,EAAMoB,YAAYC,GAAG,OAErD,EAAkClB,IAAMuD,UAAS,GAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KAEA,OAAKP,EAKD,qCAEI,cAACQ,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAUC,UAAW,EAArD,SACI,cAACC,EAAA,EAAD,CAAWC,UAAWd,EAAQpC,gBAAiBmD,UAAU,EAAzD,SACI,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UAEI,cAACC,EAAA,EAAD,CACIJ,UAAWd,EAAQ9B,WACnByC,MAAM,UACNQ,KAAK,QACLC,QAAS,kBAAMZ,GAAY,IAJ/B,SAMI,cAAC,IAAD,MAGHJ,GACG,qCACI,cAACiB,EAAA,EAAD,CACIP,UAAWd,EAAQ5B,WACnBkD,QAAQ,KAFZ,wBADJ,UAWJ,cAACD,EAAA,EAAD,CACIE,IAAKtB,EAAc7C,gBACnB0D,UAAWd,EAAQ1B,WACnBgD,QAAQ,KACRE,UAAU,eAO1B,eAACC,EAAA,EAAD,CACIC,OAAO,OACPC,KAAMpB,EACNqB,QAAS,kBAAMpB,GAAY,IAH/B,UAMI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAUC,UAAW,EAArD,SACI,cAACC,EAAA,EAAD,CAAWE,UAAU,EAArB,SACI,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UAEI,qBAAKH,UAAWd,EAAQrB,SAAUkD,IAAI,YAAYC,IAAKC,IAEvD,cAACV,EAAA,EAAD,CACIP,UAAWd,EAAQ5B,WACnBkD,QAAQ,KAFZ,uBAJJ,OAaI,cAACD,EAAA,EAAD,CACIP,UAAWd,EAAQ1B,WACnBgD,QAAQ,KACRX,MAAM,gBAHV,yBAYZ,sBAAKG,UAAWd,EAAQjB,SAAxB,UAEI,eAACiD,EAAA,EAAD,CAAMlB,UAAWd,EAAQZ,SAAzB,UAEI,eAAC6C,EAAA,EAAD,CACInB,UAAWd,EAAQT,aACnB2C,QAAM,EACNV,UAAWW,IACXC,GAAE,kBACFhB,QAAS,kBAAMZ,GAAY,IAL/B,UAOI,cAAC6B,EAAA,EAAD,CAAcvB,UAAWd,EAAQR,iBAAjC,SACI,cAAC8C,EAAA,EAAD,UAAS,sBAAMC,KAAK,eAAeC,EAAE,wFAEzC,cAACC,EAAA,EAAD,CACI3B,UAAWd,EAAQN,iBACnBgD,QAAQ,8IAIhB,eAACT,EAAA,EAAD,CACInB,UAAWd,EAAQT,aACnB2C,QAAM,EACNV,UAAWW,IACXC,GAAE,UACFhB,QAAS,kBAAMZ,GAAY,IAL/B,UAOI,cAAC6B,EAAA,EAAD,CAAcvB,UAAWd,EAAQR,iBAAjC,SACI,cAAC8C,EAAA,EAAD,UAEI,sBAAMC,KAAK,eAAeC,EAAE,sIAGpC,cAACC,EAAA,EAAD,CACI3B,UAAWd,EAAQN,iBACnBgD,QAAQ,iEAMpB,cAACV,EAAA,EAAD,CAAMlB,UAAWd,EAAQZ,SAAzB,SAEI,eAAC6C,EAAA,EAAD,CACInB,UAAWd,EAAQT,aACnB2C,QAAM,EACNV,UAAWW,IACXC,GAAE,SACFhB,QAAS,kBAAMZ,GAAY,IAL/B,UAOI,cAAC6B,EAAA,EAAD,CAAcvB,UAAWd,EAAQR,iBAAjC,SACI,cAAC8C,EAAA,EAAD,UAAS,sBAAMC,KAAK,eAAeC,EAAE,uTAEzC,cAACC,EAAA,EAAD,CACI3B,UAAWd,EAAQN,iBACnBgD,QAAQ,gFAlIzB,KC7Cf,IAIejF,EAJA,SAACb,GAAD,OAAkBc,YAAa,K,0CCAxCiF,EAAW,CAAC,CAAEC,GAAG,IAAK9C,KAAK,QAe1B,SAAe+C,EAAtB,kC,4CAAO,WAA6BC,GAA7B,eAAAC,EAAA,6DAGCC,EADAC,aAAaC,QAAQ,YACVC,KAAKC,MAAMH,aAAaC,QAAQ,aAEhCP,EAEXG,QACiBO,IAAbP,EAAMF,KACNI,EAAWA,EAASM,QAAO,SAACC,GAAD,OAAUA,EAAKX,KAAOE,EAAMF,OAT5D,kBAeII,GAfJ,4C,sBAkBA,SAAeQ,EAAtB,mC,8CAAO,WAAyBZ,GAAzB,mBAAAG,EAAA,sEACoBF,EAAc,CAAED,OADpC,0CACKW,EADL,uBAEIA,GAAQ,MAFZ,4C,oEAKA,WAA0BE,GAA1B,iBAAAV,EAAA,yDACEU,EAAK3D,KADP,sBAEO4D,QAFP,cAIGH,EAJH,2BAKIE,GALJ,IAMCb,GAAIe,cACJ7D,KAAM2D,EAAK3D,QAETkD,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACpGU,KAAKL,GACdN,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAX7C,kBAYIO,GAZJ,4C,oEAeA,WAA0BX,EAAYa,GAAtC,iBAAAV,EAAA,yDACEU,EAAK3D,KADP,sBAEO4D,QAFP,cAIGH,EAJH,2BAKIE,GALJ,IAMCb,KACA9C,KAAM2D,EAAK3D,OAGfkD,GADIA,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACvFa,KAAI,SAACC,GAAD,OAAgBA,EAAWpB,KAAOA,EAAKoB,EAAaT,KAC5EN,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAX7C,kBAYIO,GAZJ,4C,oEAeA,WAA0BX,GAA1B,eAAAG,EAAA,sDAEHC,GADIA,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACvFI,QAAO,SAACC,GAAD,OAAUA,EAAKX,KAAOA,KACjDK,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAH7C,4C,oEAMA,WAA8BJ,GAA9B,mBAAAG,EAAA,sDACCC,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACrGe,EAAIjB,EAASkB,WAAU,SAAAX,GAAI,OAAIA,EAAKX,KAAOA,MACzC,IAAI,EACuB,CAACI,EAASiB,GAAIjB,EAASiB,EAAE,IAAvDjB,EAASiB,EAAE,GADL,KACSjB,EAASiB,GADlB,MAGXhB,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAN7C,4C,oEASA,WAAgCJ,GAAhC,mBAAAG,EAAA,sDACCC,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACrGe,EAAIjB,EAASkB,WAAU,SAAAX,GAAI,OAAIA,EAAKX,KAAOA,MACzCI,EAASmB,OAAS,IAAI,EACK,CAACnB,EAASiB,GAAIjB,EAASiB,EAAE,IAAvDjB,EAASiB,EAAE,GADa,KACTjB,EAASiB,GADA,MAG7BhB,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAN7C,4C,oEASA,sBAAAD,EAAA,+EACIE,aAAaC,QAAQ,kBADzB,4C,oEAIA,WAAgCN,GAAhC,SAAAG,EAAA,sDACHE,aAAaY,QAAQ,gBAAiBjB,GADnC,4C,sBChGP,IAiCenF,GAjCA,SAACb,GAAD,OAAkBc,YAAa,CAE1C0G,KAAM,GAINC,KAAM,CACFrF,SAAU,EACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBmF,WAAY,UAEhBC,UAAW,CACPtF,QAAS,SAGbuF,KAAM,CACF9D,SAAU,SACV+D,OAAQ,GAEZC,YAAa,CACTvF,eAAgB,UAEpBwF,SAAU,GAGVC,QAAS,CACL/F,OAAQ,OCrBD,SAASgG,GAAY3H,GAChC,IAAM+C,EAAgBlD,IAAMmD,WAAWpD,GACvC,OAAImD,GAAiBA,EAAc7C,gBAAgB0H,QACxCC,IAASC,aACZ9H,EAAMC,SACN8C,EAAc7C,gBAAgB0H,SAG/B,K,wBCJLlF,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMmF,GAAKnF,OAGA,SAASmF,KACpB,IAAMjF,EAAUJ,KAERgD,EAAOsC,cAAPtC,GAER7F,IAAMoI,WAAU,YH4Eb,SAAP,4BG3EQC,CAAiBxC,KAClB,CAACA,IAEJ,MAA0B7F,IAAMuD,WAAhC,mBAAQiD,EAAR,KAAc8B,EAAd,KACA,EAAwCtI,IAAMuD,UAAS,GAAvD,mBAAQgF,EAAR,KAAqBC,EAArB,KAEAxI,IAAMoI,WAAU,WACZI,GAAe,GACf/B,EAAUZ,GACLtH,MAAK,SAACiI,GACH8B,EAAQ9B,GACRgC,GAAe,QAGxB,CAAC3C,IAEJ,MAAkC7F,IAAMuD,SAAyB,MAAjE,mBAAQ0C,EAAR,KAAkBwC,EAAlB,KACA,EAAgDzI,IAAMuD,UAAS,GAA/D,mBAAQmF,EAAR,KAAyBC,EAAzB,KAoBA,OAlBA3I,IAAMoI,WAAU,WACZ,GAAKM,EAAL,CAGA,IAAIE,GAAS,EASb,OARA9C,EAAc,IACTvH,MAAK,SAAC0H,GACC2C,IACAH,EAAYxC,GACZ0C,GAAmB,OAIxB,WACHC,GAAS,MAEd,CAACF,IAGA,qCAUI,cAACZ,GAAD,+IAICS,GACG,sCAGH/B,GACG,sBAAMzC,UAAWd,EAAQqE,KAAzB,SAEKd,EAAKqC,UACF,qBAAK9E,UAAWd,EAAQuE,UAAWzC,IAAKyB,EAAKqC,SAAU/D,IAAI,OAMvE,qBAAKf,UAAWd,EAAQwE,KAAxB,SACI,cAACxD,EAAA,EAAD,CAASF,UAAWd,EAAQ0E,YAAazD,gBAAc,EAAvD,SACK+B,GAAYA,EAASmB,OAAS,GAC3B,cAAC0B,GAAA,EAAD,CACI/E,UAAWd,EAAQ2E,SACnBrD,QAAQ,aACRhE,MAAOsF,EAHX,SAKKI,EAASe,KAAI,SAACR,GAAD,OACV,cAACuC,GAAA,EAAD,CAEIhF,UAAWd,EAAQ4E,QACnBmB,MAAOxC,EAAKzD,KACZxC,MAAOiG,EAAKX,GACZpB,UAAWW,IACXC,GAAE,sBAAiBmB,EAAKX,IACxBoD,SAAO,GANFzC,EAAKX,gBCjG9C,IAkCenF,GAlCA,SAACb,GAAD,OAAkBc,YAAa,CAE1C0G,KAAM,GAIN6B,kBAAmB,CACfvF,SAAU,YAEdwF,SAAU,CACNxF,SAAU,WACV9B,MAAO,QAGXyF,KAAM,CACFrF,SAAU,EACVC,QAAS,OACTC,cAAe,UAGnBsF,KAAM,CACF2B,cAAe,OACfzF,SAAU,SACV+D,OAAQ,EACRxF,QAAS,OACTE,eAAgB,WAChBiH,QAAS,GACT,QAAS,CACLD,cAAe,W,UCuBZ1I,GAnDA,SAACb,GAEZ,OADAd,QAAQC,IAAI,MAAOa,GACZc,YAAa,CAEhB0G,KAAM,GAINiC,OAAQ,GAGRC,aAAc,CACV3F,MAAO/D,EAAM2J,QAAQC,QAAQC,MAEjCC,eAAgB,CACZ/F,MAAO/D,EAAM2J,QAAQpK,MAAMsK,MAG/BE,KAAK,aACD9I,YAAajB,EAAMkB,QAAQ,GAC3BC,aAAcnB,EAAMkB,QAAQ,IAC3BlB,EAAMoB,YAAYC,GAAG,MAAQ,CAC1BJ,YAAajB,EAAMkB,QAAQ,GAC3BC,aAAcnB,EAAMkB,QAAQ,KAGpC8I,SAAU,CACNrI,SAAU,SACVC,aAAc,WACdC,WAAY,UAEhBoI,SAAU,CACNtI,SAAU,SACVC,aAAc,WACdC,WAAY,a,yJCXlBmB,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMgH,GAAahH,OAUR,SAASgH,GAAa5J,GACjC,IAAM8C,EAAUJ,GAAU1C,GAElByJ,EAAsDzJ,EAAtDyJ,KAAMI,EAAgD7J,EAAhD6J,cAAeC,EAAiC9J,EAAjC8J,aAAcC,EAAmB/J,EAAnB+J,eAE3C,EAAkClK,IAAMuD,UAAS,GAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KACM0G,EAAgBnK,IAAMM,OAA0B,MAEhD8J,EAAaC,cAEbf,EAAStJ,IAAMQ,SAAQ,WACzB,OAAIoJ,EAAKU,UACDC,aAAW,IAAIC,KAAKZ,EAAKU,WAAY,IAAIE,MAAQ,EAE7C,cAAClG,EAAA,EAAD,CAAYP,UAAW0G,aAAKxH,EAAQqG,OAAQrG,EAAQsG,cAAehF,QAAQ,QAAQE,UAAU,OAA7F,sFAMA,cAACH,EAAA,EAAD,CAAYP,UAAW0G,aAAKxH,EAAQqG,OAAQrG,EAAQ0G,gBAAiBpF,QAAQ,QAAQE,UAAU,OAA/F,oEAOJ,cAACH,EAAA,EAAD,CAAYP,UAAW0G,aAAKxH,EAAQqG,QAAS1F,MAAM,gBAAgBW,QAAQ,QAAQE,UAAU,OAA7F,2IAKT,CAACmF,IAEJ,OACI,qCAEI,eAAC1E,EAAA,EAAD,CACInB,UAAWd,EAAQ2G,KACnBzE,QAAM,EACNV,UAAWW,IACXC,GAAI2E,EAAcJ,GAJtB,UAOI,cAAClE,EAAA,EAAD,CACIgF,mBAAiB,EACjB/E,QACI,sBAAK5B,UAAWd,EAAQ4G,SAAxB,UACI,cAACvF,EAAA,EAAD,CAAYC,QAAQ,QAAQX,MAAM,cAAca,UAAU,OAA1D,SAAkEmF,EAAK7G,OAD3E,IAC8F,cAACuB,EAAA,EAAD,CAAYC,QAAQ,QAAQX,MAAM,gBAAgBa,UAAU,OAA5D,SAAoEmF,EAAKe,KAAO,SAGlLC,UACI,qBAAK7G,UAAWd,EAAQ6G,SAAxB,SACKR,MAKb,cAACuB,GAAA,EAAD,UACI,cAAC1G,EAAA,EAAD,CACIK,IAAK2F,EACL/F,KAAK,MACLC,QAAS,kBAAMZ,GAAY,IAH/B,SAKI,cAAC,KAAD,WAMX0G,EAAcpC,SACX,eAAC,KAAD,CACI+C,SAAUX,EAAcpC,QACxBnD,KAAMpB,EACNqB,QAAS,kBAAMpB,GAAY,IAH/B,UAMI,eAACsH,GAAA,EAAD,CACI1G,QAAS,WAAQZ,GAAY,GAAQwG,KADzC,UAGI,cAAC3E,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACI,EAAA,EAAD,CACIC,QAAQ,mGAIhB,eAACoF,GAAA,EAAD,CACI1G,QAAS,WAAQZ,GAAY,GAAQyG,KADzC,UAGI,cAAC5E,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACI,EAAA,EAAD,CACIC,QAAQ,mGAIhB,eAACoF,GAAA,EAAD,CACItG,UAAWW,IACXC,GAAE,UAAK+E,EAAWY,KAAhB,YAAwBpB,EAAK/D,GAA7B,WACFxB,QAAS,kBAAMZ,GAAY,IAH/B,UAKI,cAAC6B,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACI,EAAA,EAAD,CACIC,QAAQ,wDAIhB,eAACoF,GAAA,EAAD,CACItG,UAAWW,IACXC,GAAE,UAAK+E,EAAWY,KAAhB,YAAwBpB,EAAK/D,GAA7B,WACFxB,QAAS,kBAAMZ,GAAY,IAH/B,UAKI,cAAC6B,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACI,EAAA,EAAD,CACIC,QAAQ,wD,mCCnJrBjF,GARA,SAACb,GAAD,OAAkBc,YAAa,CAE1C0G,KAAM,M,UCEJxE,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMkI,GAAWlI,OASN,SAASkI,GAAW9K,GACf0C,KAAhB,IAEQ+B,EAA4BzE,EAA5ByE,KAAMC,EAAsB1E,EAAtB0E,QAASzE,EAAaD,EAAbC,SAEvB,OACI,cAAC8K,GAAA,EAAD,CACItG,KAAMA,EACNC,QAASA,EACTsG,YAAU,EAHd,SAKK/K,ICzBb,IAceM,GAdA,SAACb,GAAD,OAAkBc,YAAa,CAE1CyK,KAAM,CACFhK,YAAavB,EAAMkB,QAAQ,MAG/BsK,KAAM,CACF7J,SAAU,SACVC,aAAc,WACdC,WAAY,a,qBCAdmB,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMuI,GAAiBvI,OAQZ,SAASuI,GAAiBnL,GACrC,IAAM8C,EAAUJ,KAERgC,EAAsB1E,EAAtB0E,QAASzE,EAAaD,EAAbC,SAEjB,OACI,cAACsD,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAUC,UAAW,EAArD,SACI,cAACC,EAAA,EAAD,CAAWE,UAAU,EAArB,SACI,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UAEI,cAACC,EAAA,EAAD,CACIJ,UAAWd,EAAQmI,KACnBhH,KAAK,QACLR,MAAM,UACNS,QAASQ,EAJb,SAMI,cAAC,KAAD,MAGJ,cAACP,EAAA,EAAD,CAAYP,UAAWd,EAAQoI,KAAM9G,QAAQ,KAA7C,SACKnE,WCtCzB,IAceM,GAdA,SAACb,GAAD,OAAkBc,YAAa,CAE1C4K,KAAM,CACFjJ,WAAY,GACZC,cAAe,IAGnBiJ,eAAgB,CACZlJ,WAAY,GACZC,cAAe,O,oBCMR7B,GAfA,SAACb,GAAD,OAAkBc,YAAa,CAE1C8K,UAAW,CACPrK,YAAavB,EAAMkB,SAAS,KAAO,GAGvC2K,OAAQ,CACJ/H,SAAU,WACVgI,WAAY,SACZ9J,MAAO,EACPC,OAAQ,M,kDCJVe,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAM6I,GAAU7I,OAiBL,SAAS6I,GAAUzL,GAC9B,IAAM8C,EAAUJ,GAAU1C,GAEX0L,GAAiC1L,EAAxCI,MAAwCJ,EAAjC0L,eAAkBC,EAAjC,aAAgD3L,EAAhD,IAEM4L,EAAe/L,IAAMM,OAAyB,MAE9C0L,EAAehM,IAAMQ,SAAQ,WAC/B,GAAIL,EAAMI,OAAgC,kBAAhBJ,EAAMI,MAC5B,OAAOJ,EAAMI,MAAM0L,UAAU,EAAG,KAAO,QAE5C,CAAC9L,EAAMI,QAEV,OACI,qCAEI,cAAC2L,GAAA,EAAD,2BACQJ,GADR,IAEIK,WAAY,CACRC,aACI,cAACjI,EAAA,EAAD,CACIJ,UAAWd,EAAQwI,UACnBY,SAAUlM,EAAMkM,SAChBhI,QAAS,WACD0H,EAAahE,SACbgE,EAAahE,QAAQuE,SALjC,SASI,cAAC,KAAD,OAIZ/L,MAAOyL,GAAgB,GACvBO,SAAUpM,EAAMoM,YAGpB,uBACIxI,UAAWd,EAAQyI,OACnBlH,IAAKuH,EACLS,KAAK,OACLC,QAAS,WACL,GAAIV,EAAahE,QAAS,CACtB,IAAM2E,EAAQX,EAAahE,QAAQ2E,MACnC,GAAIA,GAASA,EAAMtF,OAAQ,CACvB,IAAMuF,EAAOD,EAAM,GACbE,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACfjB,EAAce,EAAOG,OAASH,EAAOG,YAAmBzG,IAE5DsG,EAAOI,cAAcL,MAIjCM,UAAW,OC9E3B,IAQevM,GARA,SAACb,GAAD,OAAkBc,YAAa,CAE1C8K,UAAW,CACPrK,YAAavB,EAAMkB,SAAS,KAAO,M,4DCOrC8B,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMmK,GAAUnK,OAQL,SAASmK,GAAU/M,GAC9B,IAAM8C,EAAUJ,GAAU1C,GAElBI,EAAyBJ,EAAzBI,MAAOsL,EAAkB1L,EAAlB0L,cAEf,EAAsC7L,IAAMuD,UAAS,GAArD,mBAAQ4J,EAAR,KAAoBC,EAApB,KAEA,OACI,eAAC,KAAD,CAAyBC,MAAOC,KAAcC,OAAQC,KAAtD,UAEI,cAACtB,GAAA,EAAD,CACIlD,MAAM,yFACNzE,QAAQ,WACR4H,WAAY,CACRsB,UAAU,EACVrB,aACI,cAACjI,EAAA,EAAD,CACIJ,UAAWd,EAAQwI,UACnBrH,KAAK,MACLC,QAAS,kBAAM+I,GAAc,IAHjC,SAKI,cAAC,KAAD,SAMhB,cAAClC,GAAA,EAAD,CACItG,KAAMuI,EACNtI,QAAS,kBAAMuI,GAAc,IAFjC,SAII,cAACM,GAAA,EAAD,CACInJ,QAAQ,SACRhE,MAAOA,EACPgM,SAAUV,SC7C9B,IAAMhJ,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAM4K,GAAiB5K,OASZ,SAAS4K,GAAiBxN,GACrC,IAAM8C,EAAUJ,KAER6D,EAAiCvG,EAAjCuG,KAAMkH,EAA2BzN,EAA3ByN,aAAcvB,EAAalM,EAAbkM,SAE5B,OACI,uBAAMtI,UAAWd,EAAQsI,KAAzB,UAEI,qBAAKxH,UAAWd,EAAQuI,eAAxB,SACI,cAACU,GAAA,EAAD,CACIlD,MAAM,gKACNjG,KAAK,OACLwB,QAAQ,WACRsJ,WAAS,EACTxB,SAAUA,EACV9L,MAAOmG,EAAK3D,MAAQ,GACpBwJ,SAAU,YAA0B,IAAdhM,EAAa,EAAtBuN,OAASvN,MAClBqN,EAAa,2BAAKlH,GAAN,IAAY3D,KAAKxC,UAKzC,qBAAKwD,UAAWd,EAAQuI,eAAxB,SACI,cAAC0B,GAAD,CACI3M,MAAOmG,EAAK4D,WAAa,KACzBuB,cAAe,SAACtL,GACZ,IAAM+J,EAAY/J,EAAQA,EAAMwN,cAAWzH,EAC3CsH,EAAa,2BAAKlH,GAAN,IAAY4D,oBAKpC,qBAAKvG,UAAWd,EAAQuI,eAAxB,SACI,cAACU,GAAA,EAAD,CACIlD,MAAM,4JACNjG,KAAK,MACLwB,QAAQ,WACRsJ,WAAS,EACTxB,SAAUA,EACV9L,MAAOmG,EAAKiE,KAAO,GACnB4B,SAAU,YAA0B,IAAdhM,EAAa,EAAtBuN,OAASvN,MAClBqN,EAAa,2BAAKlH,GAAN,IAAYiE,IAAIpK,UAKxC,qBAAKwD,UAAWd,EAAQuI,eAAxB,SACI,cAACI,GAAD,CACI5C,MAAM,oGACNjG,KAAK,MACLwB,QAAQ,WACRsJ,WAAS,EACTxB,SAAUA,EACV9L,MAAOmG,EAAKmC,UAAY,GACxBgD,cAAe,SAACtL,GACZqN,EAAa,2BAAKlH,GAAN,IAAYmC,SAAStI,a,cC5D1C,SAASyN,GAAW7N,GAC/B,IAAQ0E,EAAuB1E,EAAvB0E,QAAS3F,EAAciB,EAAdjB,UAEjB,EAA0Bc,IAAMuD,SAAyB,IAAzD,mBAAQmD,EAAR,KAAcuH,EAAd,KAEA,EAA4CjO,IAAMuD,UAAS,GAA3D,mBAAQ2K,EAAR,KAAuBC,EAAvB,KAWA,OACI,eAAClD,GAAD,CACIrG,MAAI,EACJC,QAASA,EAFb,UAKI,cAACyG,GAAD,CACIzG,QAASA,EADb,wNAMA,eAACf,EAAA,EAAD,CAAWE,SAAS,KAApB,UAEI,cAAC2J,GAAD,CACIjH,KAAMA,EACNkH,aAAcK,EACd5B,SAAU6B,IAGd,cAACE,GAAA,EAAD,CACI7J,QAAQ,YACR8H,SAAU6B,EACV7J,QAhCK,WACjB8J,GAAiB,GjBiBlB,SAAP,mCiBhBQE,CAAW3H,GACNnI,MAAK,SAACiI,GACHtH,EAAUsH,OAyBV,0ECnCD,SAAS8H,GAAWnO,GAC/B,IAAQ0E,EAAuB1E,EAAvB0E,QAAS3F,EAAciB,EAAdjB,UAET2G,EAAOsC,cAAPtC,GAER,EAA0B7F,IAAMuD,WAAhC,mBAAQiD,EAAR,KAAc8B,EAAd,KACA,EAAwCtI,IAAMuD,UAAS,GAAvD,mBAAqBiF,GAArB,WAEAxI,IAAMoI,WAAU,WACZI,GAAe,GACf/B,EAAUZ,GACLtH,MAAK,SAACiI,GACH8B,EAAQ9B,GACRgC,GAAe,QAGxB,CAAC3C,IAEJ,MAA4C7F,IAAMuD,UAAS,GAA3D,mBAAQ2K,EAAR,KAAuBC,EAAvB,KAcA,OACI,eAAClD,GAAD,CACIrG,MAAI,EACJC,QAASA,EAFb,UAKI,cAACyG,GAAD,CACIzG,QAASA,EADb,yLAMC2B,GACG,eAAC1C,EAAA,EAAD,CAAWE,SAAS,KAApB,UAEI,cAAC2J,GAAD,CACIjH,KAAMF,EACNoH,aAActF,EACd+D,SAAU6B,IAGd,cAACE,GAAA,EAAD,CACI7J,QAAQ,YACR8H,SAAU6B,EACV7J,QApCC,WACZmC,IAGL2H,GAAiB,GlBelB,SAAP,qCkBdQI,CAAW1I,EAAIW,GACVjI,MAAK,SAACiI,GACHtH,EAAUsH,QA0BN,0E,4CCpDL,SAASgI,GAAWrO,GAC/B,IAAQ0E,EAAuB1E,EAAvB0E,QAAS3F,EAAciB,EAAdjB,UAET2G,EAAOsC,cAAPtC,GAUR,OACI,eAACqF,GAAA,EAAD,CACItG,MAAM,EACNC,QAASA,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAOI,cAAC4J,GAAA,EAAD,CAAa5I,GAAG,qBAAhB,uFAIA,cAAC6I,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmB9I,GAAG,2BAAtB,6JAKJ,eAAC+I,GAAA,EAAD,WAEI,cAACR,GAAA,EAAD,CACI/J,QAASQ,EACTgK,WAAS,EAFb,kDAOA,cAACT,GAAA,EAAD,CACI/J,QApCM,YnBgDnB,SAAP,oCmB/CQyK,CAAWjJ,GACNtH,MAAK,WACFW,QAgCA,8DCrChB,IAAM2D,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMgM,GAAShM,OAOJ,SAASgM,GAAS5O,GAC7B,IAAM8C,EAAUJ,KAERmH,EAAkB7J,EAAlB6J,cAER,EAAkChK,IAAMuD,SAAyB,MAAjE,mBAAQ0C,EAAR,KAAkBwC,EAAlB,KACA,EAAgDzI,IAAMuD,UAAS,GAA/D,mBAAQmF,EAAR,KAAyBC,EAAzB,KAEA3I,IAAMoI,WAAU,WACZ,GAAKM,EAAL,CAGA,IAAIE,GAAS,EASb,OARA9C,EAAc,IACTvH,MAAK,SAAC0H,GACC2C,IACAH,EAAYxC,GACZ0C,GAAmB,OAIxB,WACHC,GAAS,MAEd,CAACF,IAEJ,IAAMsG,EAAUC,cACV7E,EAAaC,cAEnB,OACI,qCAEI,cAACvC,GAAD,qJAICY,GACG,qBAAK3E,UAAWd,EAAQiG,kBAAxB,SACI,cAACgG,GAAA,EAAD,CAAgBnL,UAAWd,EAAQkG,SAAUvF,MAAM,gBAI3D,qBAAKG,UAAWd,EAAQqE,KAAxB,SACKrB,GACG,cAAChB,EAAA,EAAD,UACKgB,EAASe,KAAI,SAAC4C,GAAD,OACV,cAACG,GAAD,CAEIH,KAAMA,EACNI,cAAeA,EACfC,aAAc,YpBFvC,SAAP,oCoBGoCkF,CAAevF,EAAK/D,IACftH,MAAK,WACFoK,GAAmB,OAI/BuB,eAAgB,YpBAzC,SAAP,oCoBCoCkF,CAAiBxF,EAAK/D,IACjBtH,MAAK,WACFoK,GAAmB,QAb1BiB,EAAK/D,WAuB9B,qBAAK9B,UAAWd,EAAQwE,KAAxB,SACI,cAAC4H,GAAA,EAAD,CACIzL,MAAM,UACNa,UAAWW,IACXC,GAAE,UAAK+E,EAAWO,IAAhB,WAHN,SAKI,cAAC,KAAD,QAIR,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOK,KAAI,UAAKZ,EAAWY,KAAhB,WAAX,SACI,cAACgD,GAAD,CACInJ,QAAS,WACLmK,EAAQM,UAEZpQ,UAAW,WACP8P,EAAQM,SACR3G,GAAmB,QAK/B,cAAC,IAAD,CAAOqC,KAAI,UAAKZ,EAAWY,KAAhB,eAAX,SACI,cAACsD,GAAD,CACIzJ,QAAS,WACLmK,EAAQM,UAEZpQ,UAAW,WACP8P,EAAQM,SACR3G,GAAmB,QAK/B,cAAC,IAAD,CAAOqC,KAAI,UAAKZ,EAAWY,KAAhB,eAAX,SACI,cAACwD,GAAD,CACI3J,QAAS,WACLmK,EAAQM,UAEZpQ,UAAW,WACP8P,EAAQM,SACR3G,GAAmB,cCjI/C,IAAM9F,GAAYC,IAAWpC,EAAQ,CACjCqC,KAAMwM,GAAMxM,OAGD,SAASwM,KACJ1M,KAAhB,IAEMuH,EAAaC,cAEnB,EAA4CrK,IAAMuD,SAAwB,MAA1E,mBAAQiM,EAAR,KAAuBC,EAAvB,KACA,EAA0DzP,IAAMuD,UAAS,GAAzE,mBAAQmM,EAAR,KAA8BC,EAA9B,KAWA,OATA3P,IAAMoI,WAAU,YrBsEb,WAAP,iCqBrEQwH,GACKrR,MAAK,SAACiR,GACHC,EAAiBD,GACjBG,GAAwB,QAGjC,IAGC,oCAEMD,GACE,eAAC,IAAD,WAEI,cAAC,IAAD,CACI1E,KAAI,UAAKZ,EAAWY,KAAhB,aACJ6E,OAAQ,kBACJ,cAACd,GAAD,CACI/E,cAAe,SAACJ,GAAD,gBAAaQ,EAAWY,KAAxB,iBAAqCpB,EAAK/D,UAKrE,cAAC,IAAD,CAAOmF,KAAI,UAAKZ,EAAWY,KAAhB,aAAiCvG,UAAWyD,KAEtDsH,EACG,cAAC,IAAD,CAAUnK,GAAE,UAAK+E,EAAWO,IAAhB,iBAA4B6E,KAExC,cAAC,IAAD,CAAUnK,GAAE,UAAK+E,EAAWO,IAAhB,oBCnDpC,IAQejK,GARA,SAACb,GAAD,OAAkBc,YAAa,CAE1C0G,KAAM,MCIJxE,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAM+M,GAAO/M,OAGF,SAAS+M,KACJjN,KAEhB,OACI,qCAEI,cAACiF,GAAD,qEAFJ,YCdR,IAQepH,GARA,SAACb,GAAD,OAAkBc,YAAa,CAE1C0G,KAAM,MCEJxE,GAAYC,IAAWpC,GAAQ,CACjCqC,KAAMgN,GAAMhN,OAOD,SAASgN,GAAM5P,GACV0C,KAEhB,OACI,qCAEI,cAACiF,GAAD,4EAFJ,WCDO,SAASkI,GAAI7P,GAELkK,cAEnB,OACI,eAACnK,EAAD,WAEI,cAAC8C,EAAD,IAEA,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOgI,KAAI,SAAYvG,UAAW8K,KAElC,cAAC,IAAD,CAAOvE,KAAI,UAAavG,UAAWqL,KAEnC,cAAC,IAAD,CAAO9E,KAAI,SAAYvG,UAAWsL,KAElC,cAAC,IAAD,CAAU1K,GAAE,iBCtB5B2C,IAAS6H,OACL,cAAC,IAAMI,WAAP,UACI,eAACC,EAAA,EAAD,CAAerQ,MAAOA,EAAtB,UACI,cAACsQ,EAAA,EAAD,IACA,cAAC,IAAD,UAEI,cAACH,GAAD,WAKZI,SAASC,eAAe,SnCErB,SAAkBlS,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkS,IAAIC,GAAwB1S,OAAOC,SAAS0S,MACpDC,SAAW5S,OAAOC,SAAS2S,OAIvC,OAGF5S,OAAO6S,iBAAiB,QAAQ,WAC9B,IAAMxS,EAAK,UAAMqS,GAAN,sBAEP5S,IAgEV,SAAiCO,EAAeC,GAE9CwS,MAAMzS,EAAO,CACX0S,QAAS,CAAE,iBAAkB,YAE5BrS,MAAK,SAACsS,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASvH,QACO,MAAfwH,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C5S,UAAUC,cAAc4S,MAAM1S,MAAK,SAACC,GAClCA,EAAa0S,aAAa3S,MAAK,WAC7BV,OAAOC,SAASqT,eAKpBlT,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVoS,CAAwBlT,EAAOC,GAI/BC,UAAUC,cAAc4S,MAAM1S,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OmC3B/BkT,GAEAhS,M","file":"static/js/main.86682144.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core/styles'\r\n\r\nexport const theme = createTheme({\r\n\r\n})\r\n","import React from 'react'\r\n\r\nexport interface IHeaderContextValue {\r\n    titleElementRef: React.RefObject<HTMLDivElement>\r\n}\r\n\r\nexport const HeaderContext = React.createContext<IHeaderContextValue | null>(null)\r\n\r\nexport interface IHeaderContextProviderProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function HeaderContextProvider(props: IHeaderContextProviderProps) {\r\n    const { children } = props\r\n\r\n    //const [ titleElement, setTitleElement ] = React.useState()\r\n\r\n    const titleElementRef = React.useRef<HTMLDivElement>(null)\r\n\r\n    const value = React.useMemo<IHeaderContextValue>(() => {\r\n        return {\r\n            titleElementRef,\r\n        }\r\n    }, [\r\n        titleElementRef,\r\n    ])\r\n\r\n    return (\r\n        <HeaderContext.Provider value={value}>\r\n            {children}\r\n        </HeaderContext.Provider>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    header: {\r\n\r\n    },\r\n    headerContainer: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n        },\r\n    },\r\n    headerMenu: {\r\n        marginRight: theme.spacing(0.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginRight: theme.spacing(1.5),\r\n        },\r\n    },\r\n\r\n    headerName: {\r\n        fontWeight: 700,\r\n    },\r\n    headerText: {\r\n        fontWeight: 400,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n    menu: {\r\n\r\n    },\r\n    menuLogo: {\r\n        width: 40,\r\n        height: 40,\r\n        marginLeft: theme.spacing(-1),\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 48,\r\n            height: 48,\r\n            marginLeft: theme.spacing(-1.5),\r\n            marginRight: theme.spacing(1.5),\r\n        },\r\n    },\r\n    menuMain: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n    },\r\n    menuList: {\r\n        paddingTop: 12,\r\n        paddingBottom: 12,\r\n    },\r\n    menuListItem: {\r\n        height: 48,\r\n        paddingLeft: 16,\r\n        paddingRight: 24,\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: 24,\r\n        }\r\n    },\r\n    menuListItemIcon: {\r\n        minWidth: 40,\r\n        [theme.breakpoints.up('sm')]: {\r\n            minWidth: 48,\r\n        }\r\n    },\r\n    menuListItemText: {\r\n        '& > span': {\r\n            lineHeight: '1px',\r\n            whiteSpace: 'nowrap',\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default styles\r\n","export default __webpack_public_path__ + \"static/media/logo.712ae7a0.svg\";","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Header.styles'\r\n\r\nimport { HeaderContext } from './Header.context'\r\n\r\nimport useTheme from '@material-ui/core/styles/useTheme'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport StorageIcon from '@material-ui/icons/Storage'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nimport logoUrl from '../../logo.svg'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Header.name,\r\n})\r\n\r\nexport interface IHeaderProps {\r\n\r\n}\r\n\r\nexport default function Header(props: IHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const headerContext = React.useContext(HeaderContext)\r\n\r\n    const theme = useTheme()\r\n    const isDesktop = useMediaQuery(theme.breakpoints.up('md'))\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n\r\n    if (!headerContext) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n                <Container className={classes.headerContainer} maxWidth={false}>\r\n                    <Toolbar disableGutters>\r\n\r\n                        <IconButton\r\n                            className={classes.headerMenu}\r\n                            color=\"inherit\"\r\n                            edge=\"start\"\r\n                            onClick={() => setMenuOpen(true)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n\r\n                        {isDesktop && (\r\n                            <>\r\n                                <Typography\r\n                                    className={classes.headerName}\r\n                                    variant=\"h6\"\r\n                                >\r\n                                    Covidcode.\r\n                                </Typography>\r\n                                &nbsp;\r\n                            </>\r\n                        )}\r\n\r\n                        <Typography\r\n                            ref={headerContext.titleElementRef}\r\n                            className={classes.headerText}\r\n                            variant=\"h6\"\r\n                            component=\"div\"\r\n                        />\r\n\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                onClose={() => setMenuOpen(false)}\r\n            >\r\n\r\n                <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n                    <Container maxWidth={false}>\r\n                        <Toolbar disableGutters>\r\n\r\n                            <img className={classes.menuLogo} alt=\"Covidcode\" src={logoUrl}/>\r\n\r\n                            <Typography\r\n                                className={classes.headerName}\r\n                                variant=\"h6\"\r\n                            >\r\n                                Covidcode\r\n                            </Typography>\r\n\r\n                            &nbsp;\r\n\r\n                            <Typography\r\n                                className={classes.headerText}\r\n                                variant=\"h6\"\r\n                                color=\"textSecondary\"\r\n                            >\r\n                                v0.1\r\n                            </Typography>\r\n\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n\r\n                <div className={classes.menuMain}>\r\n\r\n                    <List className={classes.menuList}>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/codes/codelist`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon><path fill=\"currentColor\" d=\"M2 14H8V20H2M16 8H10V10H16M2 10H8V4H2M10 4V6H22V4M10 20H16V18H10M10 16H22V14H10\"/></SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"Сертификаты о вакцинации\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/config`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon>\r\n                                    {/*<path fill=\"currentColor\" d=\"M15.9,18.45C17.25,18.45 18.35,17.35 18.35,16C18.35,14.65 17.25,13.55 15.9,13.55C14.54,13.55 13.45,14.65 13.45,16C13.45,17.35 14.54,18.45 15.9,18.45M21.1,16.68L22.58,17.84C22.71,17.95 22.75,18.13 22.66,18.29L21.26,20.71C21.17,20.86 21,20.92 20.83,20.86L19.09,20.16C18.73,20.44 18.33,20.67 17.91,20.85L17.64,22.7C17.62,22.87 17.47,23 17.3,23H14.5C14.32,23 14.18,22.87 14.15,22.7L13.89,20.85C13.46,20.67 13.07,20.44 12.71,20.16L10.96,20.86C10.81,20.92 10.62,20.86 10.54,20.71L9.14,18.29C9.05,18.13 9.09,17.95 9.22,17.84L10.7,16.68L10.65,16L10.7,15.31L9.22,14.16C9.09,14.05 9.05,13.86 9.14,13.71L10.54,11.29C10.62,11.13 10.81,11.07 10.96,11.13L12.71,11.84C13.07,11.56 13.46,11.32 13.89,11.15L14.15,9.29C14.18,9.13 14.32,9 14.5,9H17.3C17.47,9 17.62,9.13 17.64,9.29L17.91,11.15C18.33,11.32 18.73,11.56 19.09,11.84L20.83,11.13C21,11.07 21.17,11.13 21.26,11.29L22.66,13.71C22.75,13.86 22.71,14.05 22.58,14.16L21.1,15.31L21.15,16L21.1,16.68M6.69,8.07C7.56,8.07 8.26,7.37 8.26,6.5C8.26,5.63 7.56,4.92 6.69,4.92A1.58,1.58 0 0,0 5.11,6.5C5.11,7.37 5.82,8.07 6.69,8.07M10.03,6.94L11,7.68C11.07,7.75 11.09,7.87 11.03,7.97L10.13,9.53C10.08,9.63 9.96,9.67 9.86,9.63L8.74,9.18L8,9.62L7.81,10.81C7.79,10.92 7.7,11 7.59,11H5.79C5.67,11 5.58,10.92 5.56,10.81L5.4,9.62L4.64,9.18L3.5,9.63C3.41,9.67 3.3,9.63 3.24,9.53L2.34,7.97C2.28,7.87 2.31,7.75 2.39,7.68L3.34,6.94L3.31,6.5L3.34,6.06L2.39,5.32C2.31,5.25 2.28,5.13 2.34,5.03L3.24,3.47C3.3,3.37 3.41,3.33 3.5,3.37L4.63,3.82L5.4,3.38L5.56,2.19C5.58,2.08 5.67,2 5.79,2H7.59C7.7,2 7.79,2.08 7.81,2.19L8,3.38L8.74,3.82L9.86,3.37C9.96,3.33 10.08,3.37 10.13,3.47L11.03,5.03C11.09,5.13 11.07,5.25 11,5.32L10.03,6.06L10.06,6.5L10.03,6.94Z\"/>*/}\r\n                                    <path fill=\"currentColor\" d=\"M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z\" />\r\n                                </SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"Настройки\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n\r\n                    <List className={classes.menuList}>\r\n\r\n                        <ListItem\r\n                            className={classes.menuListItem}\r\n                            button\r\n                            component={NavLink}\r\n                            to={`/about`}\r\n                            onClick={() => setMenuOpen(false)}\r\n                        >\r\n                            <ListItemIcon className={classes.menuListItemIcon}>\r\n                                <SvgIcon><path fill=\"currentColor\" d=\"M11,18H13V16H11V18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,6A4,4 0 0,0 8,10H10A2,2 0 0,1 12,8A2,2 0 0,1 14,10C14,12 11,11.75 11,15H13C13,12.75 16,12.5 16,10A4,4 0 0,0 12,6Z\"/></SvgIcon>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className={classes.menuListItemText}\r\n                                primary=\"О программе\"\r\n                            />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n\r\n                </div>\r\n\r\n            </Drawer>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport default styles\r\n","import { v1 as uuid } from 'uuid'\r\n\r\nconst CODELIST = [{ id:'1', name:'TEH' }]\r\n\r\nexport interface ICode {\r\n    id: string\r\n    name: string\r\n    expiredAt?: string\r\n    url?: string\r\n    imageUrl?: string\r\n}\r\n\r\nexport interface ICodelistQuery {\r\n    id?: string\r\n    //primary?: boolean\r\n}\r\n\r\nexport async function fetchCodelist(query:ICodelistQuery): Promise<ICode[]> {\r\n    let codelist: ICode[]\r\n    if (localStorage.getItem('codelist')) {\r\n        codelist = JSON.parse(localStorage.getItem('codelist')!)\r\n    } else {\r\n        codelist = CODELIST\r\n    }\r\n    if (query) {\r\n        if (query.id !== undefined) {\r\n            codelist = codelist.filter((code) => code.id === query.id)\r\n        }\r\n        //if (query.primary !== undefined) {\r\n        //    codelist = codelist.filter((code) => code.primary === query.primary)\r\n        //}\r\n    }\r\n    return codelist\r\n}\r\n\r\nexport async function fetchCode(id: string): Promise<ICode|null> {\r\n    const [ code ] = await fetchCodelist({ id })\r\n    return code || null\r\n}\r\n\r\nexport async function createCode(data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id: uuid(),\r\n        name: data.name,\r\n    }\r\n    const codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist.push(code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function updateCode(id: string, data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id,\r\n        name: data.name,\r\n    }\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.map((existsCode) => existsCode.id !== id ? existsCode : code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function deleteCode(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.filter((code) => code.id !== id)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function moveCodeUpward(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i > 0) {\r\n        [codelist[i-1], codelist[i]] = [codelist[i], codelist[i-1]]\r\n    }\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function moveCodeDownward(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i < codelist.length - 1) {\r\n        [codelist[i+1], codelist[i]] = [codelist[i], codelist[i+1]]\r\n    }\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function fetchCurrentCodeId() {\r\n    return localStorage.getItem('currentCodeId')\r\n}\r\n\r\nexport async function putCurrentCodeId(id: string) {\r\n    localStorage.setItem('currentCodeId', id)\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    mainImage: {\r\n        display: 'block',\r\n    },\r\n\r\n    foot: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n    },\r\n    footToolbar: {\r\n        justifyContent: 'center',\r\n    },\r\n    footTabs: {\r\n\r\n    },\r\n    footTab: {\r\n        height: 64,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { HeaderContext } from './Header.context'\r\n\r\nexport interface IHeaderTitleProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function HeaderTitle(props: IHeaderTitleProps) {\r\n    const headerContext = React.useContext(HeaderContext)\r\n    if (headerContext && headerContext.titleElementRef.current) {\r\n        return ReactDOM.createPortal(\r\n            props.children,\r\n            headerContext.titleElementRef.current\r\n        )\r\n    }\r\n    return null\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Code.styles'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, fetchCodelist, putCurrentCodeId, ICode } from '../../../app-codes/services/CodesService'\r\n\r\nimport HeaderTitle from '../../../../components/Header/HeaderTitle'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Code.name,\r\n})\r\n\r\nexport default function Code() {\r\n    const classes = useStyles()\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    React.useEffect(() => {\r\n        putCurrentCodeId(id)\r\n    }, [id])\r\n\r\n    const [ code, setCode ] = React.useState<ICode | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/*<AppBar position=\"sticky\" color=\"transparent\" elevation={0}>*/}\r\n            {/*    <Container maxWidth={false}>*/}\r\n            {/*        <Toolbar disableGutters>*/}\r\n            {/*            COVIDCODE*/}\r\n            {/*        </Toolbar>*/}\r\n            {/*    </Container>*/}\r\n            {/*</AppBar>*/}\r\n\r\n            <HeaderTitle>\r\n                Сертификат о вакцинации\r\n            </HeaderTitle>\r\n\r\n            {codePending && (\r\n                <div>...</div>\r\n            )}\r\n\r\n            {code && (\r\n                <main className={classes.main}>\r\n\r\n                    {code.imageUrl && (\r\n                        <img className={classes.mainImage} src={code.imageUrl} alt=\"\"/>\r\n                    )}\r\n\r\n                </main>\r\n            )}\r\n\r\n            <div className={classes.foot}>\r\n                <Toolbar className={classes.footToolbar} disableGutters>\r\n                    {codelist && codelist.length > 1 && (\r\n                        <Tabs\r\n                            className={classes.footTabs}\r\n                            variant=\"scrollable\"\r\n                            value={id}\r\n                        >\r\n                            {codelist.map((code) => (\r\n                                <Tab\r\n                                    key={code.id}\r\n                                    className={classes.footTab}\r\n                                    label={code.name}\r\n                                    value={code.id}\r\n                                    component={NavLink}\r\n                                    to={`/codes/code/${code.id}`}\r\n                                    replace\r\n                                />\r\n                            ))}\r\n                        </Tabs>\r\n                    )}\r\n                </Toolbar>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    progressContainer: {\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    foot: {\r\n        pointerEvents: 'none',\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: 32,\r\n        '& > *': {\r\n            pointerEvents: 'all',\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => {\r\n    console.log('WTF', theme)\r\n    return createStyles({\r\n\r\n        root: {\r\n\r\n        },\r\n\r\n        status: {\r\n\r\n        },\r\n        status_valid: {\r\n            color: theme.palette.success.dark,\r\n        },\r\n        status_invalid: {\r\n            color: theme.palette.error.dark,\r\n        },\r\n\r\n        item: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingLeft: theme.spacing(3),\r\n                paddingRight: theme.spacing(3),\r\n            },\r\n        },\r\n        itemName: {\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        itemDesc: {\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        //itemIcon: {\r\n        //    marginLeft: theme.spacing(-0.5),\r\n        //},\r\n        //itemIconImage: {\r\n        //    display: 'block',\r\n        //    width: 40,\r\n        //    height: 40,\r\n        //    [theme.breakpoints.up('sm')]: {\r\n        //        width: 48,\r\n        //        height: 48,\r\n        //    },\r\n        //}\r\n    })\r\n}\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItem.styles'\r\nimport clsx from 'clsx'\r\n\r\nimport { ICode } from '../../../app-codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\nimport { compareAsc } from 'date-fns'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItem.name,\r\n})\r\n\r\nexport interface ICodelistItemProps {\r\n    item: ICode\r\n    formatItemUrl: (item: ICode) => string\r\n    onMoveUpward: () => void\r\n    onMoveDownward: () => void\r\n}\r\n\r\nexport default function CodelistItem(props: ICodelistItemProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { item, formatItemUrl, onMoveUpward, onMoveDownward } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n    const menuAnchorRef = React.useRef<HTMLButtonElement>(null)\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    const status = React.useMemo(() => {\r\n        if (item.expiredAt) {\r\n            if (compareAsc(new Date(item.expiredAt), new Date) > 0) {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_valid)} variant=\"body2\" component=\"span\">\r\n                        Действителен\r\n                    </Typography>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_invalid)} variant=\"body2\" component=\"span\">\r\n                        Просрочен\r\n                    </Typography>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <Typography className={clsx(classes.status)} color=\"textSecondary\" variant=\"body2\" component=\"span\">\r\n                    Срок действия не указан\r\n                </Typography>\r\n            )\r\n        }\r\n    }, [item])\r\n\r\n    return (\r\n        <>\r\n\r\n            <ListItem\r\n                className={classes.item}\r\n                button\r\n                component={NavLink}\r\n                to={formatItemUrl(item)}\r\n            >\r\n\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={(\r\n                        <div className={classes.itemName}>\r\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"span\">{item.name}</Typography> <Typography variant=\"body1\" color=\"textSecondary\" component=\"span\">{item.url || ' '}</Typography>\r\n                        </div>\r\n                    )}\r\n                    secondary={(\r\n                        <div className={classes.itemDesc}>\r\n                            {status}\r\n                        </div>\r\n                    )}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                    <IconButton\r\n                        ref={menuAnchorRef}\r\n                        edge=\"end\"\r\n                        onClick={() => setMenuOpen(true)}\r\n                    >\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n\r\n            </ListItem>\r\n\r\n            {menuAnchorRef.current && (\r\n                <Menu\r\n                    anchorEl={menuAnchorRef.current}\r\n                    open={menuOpen}\r\n                    onClose={() => setMenuOpen(false)}\r\n                >\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveUpward() }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowUpwardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Переместить выше\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveDownward() }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowDownwardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Переместить ниже\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/update`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <EditIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Изменить\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/delete`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <DeleteForeverIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Удалить\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                </Menu>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageDialog.styles'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageDialog.name,\r\n})\r\n\r\nexport interface IPageDialogProps {\r\n    open: boolean\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialog(props: IPageDialogProps) {\r\n    const classes = useStyles()\r\n\r\n    const { open, onClose, children } = props\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullScreen\r\n        >\r\n            {children}\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    back: {\r\n        marginRight: theme.spacing(1.5),\r\n    },\r\n\r\n    text: {\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageDialogHeader.styles'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageDialogHeader.name,\r\n})\r\n\r\nexport interface IPageDialogHeaderProps {\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialogHeader(props: IPageDialogHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const { onClose, children } = props\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n            <Container maxWidth={false}>\r\n                <Toolbar disableGutters>\r\n\r\n                    <IconButton\r\n                        className={classes.back}\r\n                        edge=\"start\"\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        <ArrowBackIcon/>\r\n                    </IconButton>\r\n\r\n                    <Typography className={classes.text} variant=\"h6\">\r\n                        {children}\r\n                    </Typography>\r\n\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    form: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n    fieldContainer: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    adornment: {\r\n        marginRight: theme.spacing(-1.5) + 2,\r\n    },\r\n\r\n    hidden: {\r\n        position: 'absolute',\r\n        visibility: 'hidden',\r\n        width: 1,\r\n        height: 1,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './FileField.styles'\r\n\r\nimport TextField, { StandardTextFieldProps, FilledTextFieldProps, OutlinedTextFieldProps } from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: FileField.name,\r\n})\r\n\r\nexport interface IStandardFileFieldProps extends StandardTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IFilledFileFieldProps extends FilledTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IOutlinedFileFieldProps extends OutlinedTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport type IFileFieldProps = IStandardFileFieldProps | IFilledFileFieldProps | IOutlinedFileFieldProps\r\n\r\nexport default function FileField(props: IFileFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { value, onChangeValue, ...otherProps } = props\r\n\r\n    const fileInputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n    const displayValue = React.useMemo(() => {\r\n        if (props.value && typeof props.value === 'string') {\r\n            return props.value.substring(0, 300) + '...'\r\n        }\r\n    }, [props.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <TextField\r\n                {...otherProps}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            className={classes.adornment}\r\n                            disabled={props.disabled}\r\n                            onClick={() => {\r\n                                if (fileInputRef.current) {\r\n                                    fileInputRef.current.click()\r\n                                }\r\n                            }}\r\n                        >\r\n                            <AttachFileIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                value={displayValue || ''}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            <input\r\n                className={classes.hidden}\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                onInput={() => {\r\n                    if (fileInputRef.current) {\r\n                        const files = fileInputRef.current.files\r\n                        if (files && files.length) {\r\n                            const file = files[0]\r\n                            const reader = new FileReader()\r\n                            reader.onloadend = () => {\r\n                                onChangeValue(reader.result ? reader.result as string : undefined)\r\n                            }\r\n                            reader.readAsDataURL(file)\r\n                        }\r\n                    }\r\n                }}\r\n                tabIndex={-1}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    adornment: {\r\n        marginRight: theme.spacing(-1.5) + 2,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './DateField.styles'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport ruLocale from \"date-fns/locale/ru\"\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EventIcon from '@material-ui/icons/Event'\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: DateField.name,\r\n})\r\n\r\nexport interface IDateFieldProps {\r\n    value?: string | null\r\n    onChangeValue: (value?: Date | null) => void\r\n}\r\n\r\nexport default function DateField(props: IDateFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { value, onChangeValue } = props\r\n\r\n    const [ pickerOpen, setPickerOpen ] = React.useState(false)\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n\r\n            <TextField\r\n                label=\"Срок действия до\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            className={classes.adornment}\r\n                            edge=\"end\"\r\n                            onClick={() => setPickerOpen(true)}\r\n                        >\r\n                            <EventIcon/>\r\n                        </IconButton>\r\n                    )\r\n                }}\r\n            />\r\n\r\n            <Dialog\r\n                open={pickerOpen}\r\n                onClose={() => setPickerOpen(false)}\r\n            >\r\n                <DatePicker\r\n                    variant=\"static\"\r\n                    value={value}\r\n                    onChange={onChangeValue}\r\n                />\r\n            </Dialog>\r\n\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItemForm.styles'\r\n\r\nimport { ICode } from '../../../app-codes/services/CodesService'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FileField from '../../../../components/FileField/FileField'\r\nimport DateField from '../../../../components/DateField/DateField'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItemForm.name,\r\n})\r\n\r\nexport interface ICodelistItemFormProps {\r\n    data: Partial<ICode>\r\n    onChangeData: (data: Partial<ICode>) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport default function CodelistItemForm(props: ICodelistItemFormProps) {\r\n    const classes = useStyles()\r\n\r\n    const { data, onChangeData, disabled } = props\r\n\r\n    return (\r\n        <form className={classes.form}>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Название (чем короче, тем лучше)\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.name || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, name:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <DateField\r\n                    value={data.expiredAt || null}\r\n                    onChangeValue={(value) => {\r\n                        const expiredAt = value ? value.toJSON() : undefined\r\n                        onChangeData({ ...data, expiredAt })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Адрес страницы на Госуслугах\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.url || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, url:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <FileField\r\n                    label=\"Адрес изображения\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.imageUrl || ''}\r\n                    onChangeValue={(value) => {\r\n                        onChangeData({ ...data, imageUrl:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { createCode, ICode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface ICreateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function CreateItem(props: ICreateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const [ data, setData ] = React.useState<Partial<ICode>>({})\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitPending(true)\r\n        createCode(data)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Новая запись о сертификате вакцинации\r\n            </PageDialogHeader>\r\n\r\n            <Container maxWidth=\"md\">\r\n\r\n                <CodelistItemForm\r\n                    data={data}\r\n                    onChangeData={setData}\r\n                    disabled={submitPending}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    disabled={submitPending}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n\r\n            </Container>\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, updateCode, ICode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IUpdateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function UpdateItem(props: IUpdateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const [ code, setCode ] = React.useState<Partial<ICode> | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        if (!code) {\r\n            return\r\n        }\r\n        setSubmitPending(true)\r\n        updateCode(id, code)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Запись о сертификате вакцинации\r\n            </PageDialogHeader>\r\n\r\n            {code && (\r\n                <Container maxWidth=\"md\">\r\n\r\n                    <CodelistItemForm\r\n                        data={code}\r\n                        onChangeData={setCode}\r\n                        disabled={submitPending}\r\n                    />\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        disabled={submitPending}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                </Container>\r\n            )}\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { deleteCode, ICode } from '../../../../app-codes/services/CodesService'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IDeleteItemProps {\r\n    onClose: () => void\r\n    onSuccess: () => void\r\n}\r\n\r\nexport default function DeleteItem(props: IDeleteItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const handleConfirm = () => {\r\n        deleteCode(id)\r\n            .then(() => {\r\n                onSuccess()\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Удаление кода\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Действительно удалить код?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n                <Button\r\n                    onClick={onClose}\r\n                    autoFocus\r\n                >\r\n                    Отмена\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleConfirm}\r\n                >\r\n                    Удалить\r\n                </Button>\r\n\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Codelist.styles'\r\n\r\nimport { fetchCodelist, moveCodeUpward, moveCodeDownward, ICode } from '../../../app-codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport HeaderTitle from '../../../../components/Header/HeaderTitle'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport List from '@material-ui/core/List'\r\nimport CodelistItem from '../CodelistItem/CodelistItem'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport CreateItem from '../CodelistTool/CreateItem/CreateItem'\r\nimport UpdateItem from '../CodelistTool/UpdateItem/UpdateItem'\r\nimport DeleteItem from '../CodelistTool/DeleteItem/DeleteItem'\r\n\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codelist.name,\r\n})\r\n\r\nexport interface ICodelistProps {\r\n    formatItemUrl: (item: ICode) => string\r\n}\r\n\r\nexport default function Codelist(props: ICodelistProps) {\r\n    const classes = useStyles()\r\n\r\n    const { formatItemUrl } = props\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    const history = useHistory()\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <HeaderTitle>\r\n                Сертификаты о вакцинации\r\n            </HeaderTitle>\r\n\r\n            {codelistPending && (\r\n                <div className={classes.progressContainer}>\r\n                    <LinearProgress className={classes.progress} color=\"secondary\"/>\r\n                </div>\r\n            )}\r\n\r\n            <div className={classes.main}>\r\n                {codelist && (\r\n                    <List>\r\n                        {codelist.map((item) => (\r\n                            <CodelistItem\r\n                                key={item.id}\r\n                                item={item}\r\n                                formatItemUrl={formatItemUrl}\r\n                                onMoveUpward={() => {\r\n                                    moveCodeUpward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                                onMoveDownward={() => {\r\n                                    moveCodeDownward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </List>\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.foot}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    component={NavLink}\r\n                    to={`${routeMatch.url}/create`}\r\n                >\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={`${routeMatch.path}/create`}>\r\n                    <CreateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/update`}>\r\n                    <UpdateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/delete`}>\r\n                    <DeleteItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Codes.styles'\r\n\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { fetchCurrentCodeId, ICode } from '../../services/CodesService'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Code from '../../../app-codes-code/containers/Code/Code'\r\nimport Codelist from '../../../app-codes-codelist/containers/Codelist/Codelist'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codes.name,\r\n})\r\n\r\nexport default function Codes() {\r\n    const classes = useStyles()\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    const [ currentCodeId, setCurrentCodeId ] = React.useState<string | null>(null)\r\n    const [ currentCodeIdPending, setCurrentCodeIdPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        fetchCurrentCodeId()\r\n            .then((currentCodeId) => {\r\n                setCurrentCodeId(currentCodeId)\r\n                setCurrentCodeIdPending(false)\r\n            })\r\n        ;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {!currentCodeIdPending && (\r\n                <Switch>\r\n\r\n                    <Route\r\n                        path={`${routeMatch.path}/codelist`}\r\n                        render={() => (\r\n                            <Codelist\r\n                                formatItemUrl={(item) => `${routeMatch.path}/code/${item.id}`}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Route path={`${routeMatch.path}/code/:id`} component={Code}/>\r\n\r\n                    {currentCodeId ? (\r\n                        <Redirect to={`${routeMatch.url}/code/${currentCodeId}`}/>\r\n                    ) : (\r\n                        <Redirect to={`${routeMatch.url}/codelist`}/>\r\n                    )}\r\n\r\n                </Switch>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Config.styles'\r\n\r\nimport { fetchConfig, IConfig } from '../../services/ConfigService'\r\n\r\nimport HeaderTitle from '../../../../components/Header/HeaderTitle'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Config.name,\r\n})\r\n\r\nexport default function Config() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            <HeaderTitle>\r\n                Настройки\r\n            </HeaderTitle>\r\n\r\n            config\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './About.styles'\r\n\r\nimport HeaderTitle from '../../../../components/Header/HeaderTitle'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: About.name,\r\n})\r\n\r\nexport interface IAboutProps {\r\n\r\n}\r\n\r\nexport default function About(props: IAboutProps) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            <HeaderTitle>\r\n                О программе\r\n            </HeaderTitle>\r\n\r\n            about\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nimport HeaderContextProvider from '../../../../components/Header/Header.context'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport Codes from '../../../app-codes/containers/Codes/Codes'\r\nimport Config from '../../../app-config/containers/Config/Config'\r\nimport About from '../../../app-about/containers/About/About'\r\n\r\nexport interface IAppProps {\r\n\r\n}\r\n\r\nexport default function App(props: IAppProps) {\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <HeaderContextProvider>\r\n\r\n            <Header/>\r\n\r\n            <Switch>\r\n\r\n                <Route path={`/codes`} component={Codes}/>\r\n\r\n                <Route path={`/config`} component={Config}/>\r\n\r\n                <Route path={`/about`} component={About}/>\r\n\r\n                <Redirect to={`/codes`}/>\r\n\r\n            </Switch>\r\n\r\n        </HeaderContextProvider>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { theme } from './theme'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { HashRouter } from 'react-router-dom'\n\nimport App from './modules/app/containers/App/App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <HashRouter>\n\n                <App/>\n\n            </HashRouter>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorkerRegistration.register()\n\nreportWebVitals()\n"],"sourceRoot":""}